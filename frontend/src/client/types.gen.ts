// This file is auto-generated by @hey-api/openapi-ts

/**
 * Schema for bulk updating activities.
 */
export type ActivityBulkUpdateRequest = {
  /**
   * List of activity IDs to update
   */
  activity_ids: Array<string>
  /**
   * New status for all activities
   */
  status?: ActivityStatusSchema | null
  /**
   * New priority for all activities
   */
  priority?: ActivityPrioritySchema | null
  /**
   * New assignee for all activities
   */
  assigned_to?: string | null
  /**
   * Tags to add to all activities
   */
  tags_to_add?: Array<string> | null
  /**
   * Tags to remove from all activities
   */
  tags_to_remove?: Array<string> | null
  /**
   * New due date for all activities
   */
  due_date?: string | null
  /**
   * New scheduled date for all activities
   */
  reschedule_date?: string | null
  /**
   * Bulk update notes
   */
  notes?: string | null
}

/**
 * Schema for creating a new activity.
 */
export type ActivityCreateRequest = {
  /**
   * ID of the contact this activity is for
   */
  contact_id: string
  /**
   * Type of activity
   */
  activity_type: ActivityTypeSchema
  /**
   * Activity title
   */
  title: string
  /**
   * Detailed description of the activity
   */
  description?: string | null
  /**
   * When the activity is scheduled
   */
  scheduled_date?: string | null
  /**
   * When the activity is due
   */
  due_date?: string | null
  /**
   * Activity priority
   */
  priority?: ActivityPrioritySchema
  /**
   * User ID of the person assigned to this activity
   */
  assigned_to?: string | null
  /**
   * Duration in minutes (max 24 hours)
   */
  duration_minutes?: number | null
  /**
   * Location for the activity
   */
  location?: string | null
  /**
   * Tags for categorizing the activity
   */
  tags?: Array<string>
  /**
   * Additional metadata
   */
  metadata?: {
    [key: string]: unknown
  }
  /**
   * Template to create activity from
   */
  template_id?: string | null
  /**
   * Activity participants
   */
  participants?: Array<ActivityParticipantSchema>
  /**
   * Reminder configurations
   */
  reminders?: Array<{
    [key: string]: unknown
  }>
}

/**
 * Schema for paginated activity lists.
 */
export type ActivityListResponse = {
  /**
   * List of activities
   */
  activities: Array<ActivityResponse>
  /**
   * Total number of activities
   */
  total_count: number
  /**
   * Number of items skipped
   */
  skip: number
  /**
   * Maximum number of items returned
   */
  limit: number
  /**
   * Whether there are more items
   */
  has_more: boolean
}

/**
 * Schema for activity participants.
 */
export type ActivityParticipantSchema = {
  /**
   * User ID of the participant
   */
  user_id: string
  /**
   * Name of the participant
   */
  name: string
  /**
   * Role in the activity (organizer, participant, observer)
   */
  role?: string
  /**
   * Whether this is the primary participant
   */
  is_primary?: boolean
}

/**
 * Activity priority enumeration for API.
 */
export type ActivityPrioritySchema = "low" | "medium" | "high" | "urgent"

/**
 * Schema for activity reminder response.
 */
export type ActivityReminderResponse = {
  /**
   * Reminder ID
   */
  reminder_id: string
  /**
   * Activity ID
   */
  activity_id: string
  /**
   * Contact ID
   */
  contact_id: string
  /**
   * Activity title
   */
  activity_title: string
  /**
   * Reminder time
   */
  reminder_time: string
  /**
   * Reminder type
   */
  reminder_type: string
  /**
   * Reminder message
   */
  message?: string | null
}

/**
 * Schema for activity reminders.
 */
export type ActivityReminderSchema = {
  /**
   * Unique identifier for the reminder
   */
  reminder_id?: string | null
  /**
   * When the reminder should be sent
   */
  reminder_time: string
  /**
   * Type of reminder (notification, email, sms)
   */
  reminder_type?: string
  /**
   * Custom reminder message
   */
  message?: string | null
  /**
   * Whether the reminder has been sent
   */
  is_sent?: boolean
  /**
   * When the reminder was sent
   */
  sent_at?: string | null
}

/**
 * Schema for activity response data.
 */
export type ActivityResponse = {
  /**
   * Activity ID
   */
  id: string
  /**
   * Business ID
   */
  business_id: string
  /**
   * Contact ID
   */
  contact_id: string
  /**
   * Template ID if created from template
   */
  template_id?: string | null
  /**
   * Parent activity ID
   */
  parent_activity_id?: string | null
  /**
   * Activity type
   */
  activity_type: ActivityTypeSchema
  /**
   * Activity title
   */
  title: string
  /**
   * Activity description
   */
  description: string
  /**
   * Current status
   */
  status: ActivityStatusSchema
  /**
   * Activity priority
   */
  priority: ActivityPrioritySchema
  /**
   * Scheduled date/time
   */
  scheduled_date?: string | null
  /**
   * Due date/time
   */
  due_date?: string | null
  /**
   * Completion date/time
   */
  completed_date?: string | null
  /**
   * Duration in minutes
   */
  duration_minutes?: number | null
  /**
   * Activity location
   */
  location?: string | null
  /**
   * Activity participants
   */
  participants?: Array<ActivityParticipantSchema>
  /**
   * Activity reminders
   */
  reminders?: Array<ActivityReminderSchema>
  /**
   * Additional metadata
   */
  metadata?: {
    [key: string]: unknown
  }
  /**
   * Activity tags
   */
  tags?: Array<string>
  /**
   * Creator user ID
   */
  created_by: string
  /**
   * Assigned user ID
   */
  assigned_to?: string | null
  /**
   * Creation timestamp
   */
  created_date: string
  /**
   * Last modification timestamp
   */
  last_modified: string
  /**
   * Whether the activity is overdue
   */
  is_overdue: boolean
  /**
   * Human-readable duration
   */
  duration_display: string
  /**
   * Human-readable status
   */
  status_display: string
  /**
   * Human-readable priority
   */
  priority_display: string
  /**
   * Human-readable activity type
   */
  type_display: string
}

/**
 * Schema for searching activities.
 */
export type ActivitySearchRequest = {
  /**
   * Filter by contact IDs
   */
  contact_ids?: Array<string> | null
  /**
   * Filter by activity types
   */
  activity_types?: Array<ActivityTypeSchema> | null
  /**
   * Filter by statuses
   */
  statuses?: Array<ActivityStatusSchema> | null
  /**
   * Filter by priorities
   */
  priorities?: Array<ActivityPrioritySchema> | null
  /**
   * Filter by assigned user
   */
  assigned_to?: string | null
  /**
   * Filter by creator
   */
  created_by?: string | null
  /**
   * Filter activities after this date
   */
  start_date?: string | null
  /**
   * Filter activities before this date
   */
  end_date?: string | null
  /**
   * Filter by due date start
   */
  due_start_date?: string | null
  /**
   * Filter by due date end
   */
  due_end_date?: string | null
  /**
   * Filter by tags
   */
  tags?: Array<string> | null
  /**
   * Search in title and description
   */
  search_term?: string | null
  /**
   * Include overdue activities
   */
  include_overdue?: boolean
  /**
   * Include completed activities
   */
  include_completed?: boolean
  /**
   * Sort field
   */
  sort_by?: string
  /**
   * Sort order
   */
  sort_order?: string
}

/**
 * Schema for activity statistics response.
 */
export type ActivityStatisticsResponse = {
  /**
   * Total number of activities
   */
  total_activities: number
  /**
   * Number of pending activities
   */
  pending_activities: number
  /**
   * Number of in-progress activities
   */
  in_progress_activities: number
  /**
   * Number of completed activities
   */
  completed_activities: number
  /**
   * Number of overdue activities
   */
  overdue_activities: number
  /**
   * Activities grouped by type
   */
  activities_by_type: {
    [key: string]: number
  }
  /**
   * Activities grouped by priority
   */
  activities_by_priority: {
    [key: string]: number
  }
  /**
   * Average completion time in hours
   */
  average_completion_time?: number | null
  /**
   * Number of upcoming activities
   */
  upcoming_activities_count: number
  /**
   * Activities scheduled this week
   */
  activities_this_week: number
  /**
   * Activities scheduled this month
   */
  activities_this_month: number
  /**
   * Overall completion rate percentage
   */
  completion_rate: number
}

/**
 * Activity status enumeration for API.
 */
export type ActivityStatusSchema =
  | "pending"
  | "in_progress"
  | "completed"
  | "cancelled"
  | "overdue"

/**
 * Schema for creating activity templates.
 */
export type ActivityTemplateCreateRequest = {
  /**
   * Template name
   */
  name: string
  /**
   * Template description
   */
  description: string
  /**
   * Activity type
   */
  activity_type: ActivityTypeSchema
  /**
   * Default duration in minutes
   */
  default_duration?: number | null
  /**
   * Default reminder configurations
   */
  default_reminders?: Array<{
    [key: string]: unknown
  }>
  /**
   * Default participant user IDs
   */
  default_participants?: Array<string>
  /**
   * Custom template fields
   */
  custom_fields?: {
    [key: string]: unknown
  }
}

/**
 * Schema for activity template response.
 */
export type ActivityTemplateResponse = {
  /**
   * Template ID
   */
  template_id: string
  /**
   * Template name
   */
  name: string
  /**
   * Template description
   */
  description: string
  /**
   * Activity type
   */
  activity_type: ActivityTypeSchema
  /**
   * Default duration in minutes
   */
  default_duration?: number | null
  /**
   * Default reminders
   */
  default_reminders?: Array<{
    [key: string]: unknown
  }>
  /**
   * Default participants
   */
  default_participants?: Array<string>
  /**
   * Custom fields
   */
  custom_fields?: {
    [key: string]: unknown
  }
  /**
   * Whether template is active
   */
  is_active: boolean
  /**
   * Creator user ID
   */
  created_by: string
  /**
   * Creation timestamp
   */
  created_date: string
}

/**
 * Activity type enumeration for API.
 */
export type ActivityTypeSchema =
  | "interaction"
  | "status_change"
  | "task"
  | "reminder"
  | "note"
  | "system_event"
  | "service_event"
  | "financial_event"
  | "document_event"

/**
 * Schema for updating an existing activity.
 */
export type ActivityUpdateRequest = {
  /**
   * Activity title
   */
  title?: string | null
  /**
   * Activity description
   */
  description?: string | null
  /**
   * Activity status
   */
  status?: ActivityStatusSchema | null
  /**
   * Activity priority
   */
  priority?: ActivityPrioritySchema | null
  /**
   * Scheduled date/time
   */
  scheduled_date?: string | null
  /**
   * Due date/time
   */
  due_date?: string | null
  /**
   * Duration in minutes
   */
  duration_minutes?: number | null
  /**
   * Activity location
   */
  location?: string | null
  /**
   * Assigned user ID
   */
  assigned_to?: string | null
  /**
   * Activity tags
   */
  tags?: Array<string> | null
  /**
   * Additional metadata
   */
  metadata?: {
    [key: string]: unknown
  } | null
  /**
   * Update notes
   */
  notes?: string | null
  /**
   * Reason for rescheduling
   */
  reschedule_reason?: string | null
}

/**
 * Adaptation impact summary.
 */
export type AdaptationImpactSummary = {
  /**
   * Number of jobs rescheduled
   */
  jobs_rescheduled: number
  /**
   * Number of users affected
   */
  users_affected: number
  /**
   * Customer notifications sent
   */
  customer_notifications_sent: number
  /**
   * Total delay in minutes
   */
  total_delay_minutes: number
  /**
   * Adaptation success rate
   */
  adaptation_success_rate: string
}

/**
 * Schedule adaptation preferences.
 */
export type AdaptationPreferences = {
  /**
   * Allow overtime to handle disruption
   */
  allow_overtime?: boolean
  /**
   * Maximum acceptable delay
   */
  max_schedule_delay_minutes?: number
  /**
   * Send notifications to customers
   */
  notify_customers?: boolean
  /**
   * Send notifications to technicians
   */
  notify_technicians?: boolean
  /**
   * Prefer keeping same technician when possible
   */
  prefer_same_technician?: boolean
  /**
   * Maximum number of job reassignments
   */
  max_reassignments?: number
}

/**
 * Adapted job information.
 */
export type AdaptedJob = {
  /**
   * Job ID
   */
  job_id: string
  /**
   * Original schedule
   */
  original_schedule: {
    [key: string]: unknown
  }
  /**
   * New schedule
   */
  new_schedule: {
    [key: string]: unknown
  }
  /**
   * Reason for adaptation
   */
  adaptation_reason: string
  /**
   * Impact score
   */
  impact_score: string
}

/**
 * Schema for simple message responses.
 */
export type app__api__schemas__activity_schemas__MessageResponse = {
  /**
   * Response message
   */
  message: string
  /**
   * Whether operation was successful
   */
  success?: boolean
}

/**
 * Generic message response.
 */
export type app__api__schemas__contact_schemas__MessageResponse = {
  /**
   * Response message
   */
  message: string
  /**
   * Whether operation was successful
   */
  success?: boolean
}

/**
 * Schema for Apple Sign-In with ID token from iOS app.
 */
export type AppleSignInRequest = {
  /**
   * ID token from Apple Sign-In
   */
  id_token: string
  /**
   * User identifier from Apple
   */
  user_identifier: string
  /**
   * Email from Apple (if provided)
   */
  email?: string | null
  /**
   * Full name from Apple (if provided)
   */
  full_name?: string | null
}

/**
 * Request to approve/deny time off.
 */
export type ApproveTimeOffRequest = {
  /**
   * New status (approved/denied)
   */
  status: TimeOffStatus
  /**
   * Reason for denial
   */
  denial_reason?: string | null
}

/**
 * Schema for authenticated user information.
 */
export type AuthUserResponse = {
  id: string
  email: string | null
  phone: string | null
  full_name: string | null
  is_active: boolean
  is_superuser: boolean
  supabase_id?: string | null
  last_login?: string | null
}

/**
 * Request to check user availability.
 */
export type AvailabilityCheckRequest = {
  /**
   * User IDs to check
   */
  user_ids: Array<string>
  /**
   * Start of time period
   */
  start_datetime: string
  /**
   * End of time period
   */
  end_datetime: string
  /**
   * Include time off information
   */
  include_time_off?: boolean
  /**
   * Include calendar events
   */
  include_calendar_events?: boolean
  /**
   * Include working hours
   */
  include_working_hours?: boolean
}

/**
 * Response for availability check.
 */
export type AvailabilityCheckResponse = {
  /**
   * Request ID for tracking
   */
  request_id?: string | null
  /**
   * When the check was performed
   */
  check_datetime: string
  /**
   * User availability details
   */
  user_availability: Array<UserAvailability>
  /**
   * Summary information
   */
  summary?: {
    [key: string]: unknown
  }
}

/**
 * Request for available time slots.
 */
export type AvailableTimeSlotRequest = {
  /**
   * Type of job/service
   */
  job_type: string
  /**
   * Estimated job duration in hours
   */
  estimated_duration_hours: number
  /**
   * Required skills for the job
   */
  required_skills?: Array<string>
  /**
   * Job location details
   */
  job_address?: {
    [key: string]: unknown
  } | null
  /**
   * Customer's preferred date range
   */
  preferred_date_range: TimeWindow
  /**
   * Customer scheduling preferences
   */
  customer_preferences?: {
    [key: string]: unknown
  } | null
  /**
   * Job priority level
   */
  priority?: string
}

/**
 * Response with available time slots.
 */
export type AvailableTimeSlotsResponse = {
  /**
   * Unique request identifier
   */
  request_id: string
  /**
   * List of available time slots
   */
  available_slots: Array<TimeSlot>
  /**
   * Total number of slots found
   */
  total_slots_found: number
  /**
   * Applied search criteria
   */
  search_criteria: {
    [key: string]: unknown
  }
  /**
   * Scheduling recommendations
   */
  recommendations?: Array<string>
  /**
   * Alternative options
   */
  alternative_suggestions?: Array<{
    [key: string]: unknown
  }>
  /**
   * Deadline to book these slots
   */
  booking_deadline?: string | null
}

/**
 * Schema for bulk operation responses.
 */
export type BulkOperationResponse = {
  /**
   * Number of successful operations
   */
  success_count: number
  /**
   * Number of failed operations
   */
  error_count: number
  /**
   * List of error messages
   */
  errors?: Array<string>
  /**
   * Overall operation message
   */
  message: string
}

/**
 * Schema for current business context information.
 */
export type BusinessContextInfoResponse = {
  /**
   * Current business ID
   */
  current_business_id?: string
  /**
   * List of businesses user can access
   */
  available_businesses: Array<{
    [key: string]: unknown
  }>
  /**
   * User ID
   */
  user_id: string
}

/**
 * Request model for updating business context.
 */
export type BusinessContextRequest = {
  business_id: string
}

/**
 * Schema for business context response.
 */
export type BusinessContextResponse = {
  /**
   * Current business ID
   */
  current_business_id: string
  /**
   * List of businesses user can access
   */
  available_businesses: Array<{
    [key: string]: unknown
  }>
  /**
   * User ID
   */
  user_id: string
  /**
   * New JWT token with updated business context
   */
  new_token: string
}

/**
 * Request schema for creating a business.
 */
export type BusinessCreateRequest = {
  /**
   * Business name
   */
  name: string
  /**
   * Industry category
   */
  industry: string
  /**
   * Company size category
   */
  company_size: CompanySizeSchema
  /**
   * Custom industry if not in predefined list
   */
  custom_industry?: string | null
  /**
   * Business description
   */
  description?: string | null
  /**
   * Business phone number
   */
  phone_number?: string | null
  /**
   * Business address
   */
  business_address?: string | null
  /**
   * Business website URL
   */
  website?: string | null
  /**
   * Business email address
   */
  business_email?: string | null
  /**
   * Selected platform features
   */
  selected_features?: Array<string>
  /**
   * Primary business goals
   */
  primary_goals?: Array<string>
  /**
   * How did you hear about us
   */
  referral_source?: ReferralSourceSchema | null
  /**
   * Business timezone
   */
  timezone?: string | null
}

/**
 * Response schema for detailed business information.
 */
export type BusinessDetailResponse = {
  business: BusinessResponse
  user_membership: BusinessMembershipResponse
  team_members: Array<BusinessMembershipResponse>
  pending_invitations: Array<BusinessInvitationResponse>
  total_members: number
  owner_membership: BusinessMembershipResponse
}

/**
 * Request schema for accepting business invitations.
 */
export type BusinessInvitationAcceptRequest = {
  /**
   * ID of the invitation to accept
   */
  invitation_id: string
}

/**
 * Request schema for creating business invitations.
 */
export type BusinessInvitationCreateRequest = {
  /**
   * Email address to invite
   */
  invited_email?: string | null
  /**
   * Phone number to invite
   */
  invited_phone?: string | null
  /**
   * Role to assign to the invitee
   */
  role: BusinessRoleSchema
  /**
   * Personal message for the invitation
   */
  message?: string | null
  /**
   * Custom permissions for the role
   */
  permissions?: Array<string> | null
  /**
   * Department to assign
   */
  department_id?: string | null
  /**
   * Days until invitation expires
   */
  expiry_days?: number
}

/**
 * Response schema for business invitations.
 */
export type BusinessInvitationResponse = {
  id: string
  business_id: string
  business_name: string
  invited_email: string | null
  invited_phone: string | null
  invited_by: string
  invited_by_name: string
  role: BusinessRoleSchema
  permissions: Array<string>
  invitation_date: string | null
  expiry_date: string | null
  status: InvitationStatusSchema
  message: string | null
  accepted_date: string | null
  declined_date: string | null
  role_display: string
  status_display: string
  expiry_summary: string
}

/**
 * Response schema for business membership.
 */
export type BusinessMembershipResponse = {
  id: string
  business_id: string
  user_id: string
  role: BusinessRoleSchema
  permissions: Array<string>
  joined_date: string | null
  invited_date: string | null
  invited_by: string | null
  is_active: boolean
  department_id: string | null
  job_title: string | null
  role_display: string
}

/**
 * Summary of user's business membership.
 */
export type BusinessMembershipSummary = {
  business_id: string
  business_name: string
  role: string
  is_owner: boolean
  is_active: boolean
  joined_date: string | null
}

/**
 * Request schema for updating business membership.
 */
export type BusinessMembershipUpdateRequest = {
  /**
   * New role for the member
   */
  role?: BusinessRoleSchema | null
  /**
   * Custom permissions list
   */
  permissions?: Array<string> | null
  /**
   * Department assignment
   */
  department_id?: string | null
  /**
   * Job title
   */
  job_title?: string | null
  /**
   * Active status
   */
  is_active?: boolean | null
}

/**
 * Response schema for business information.
 */
export type BusinessResponse = {
  id: string
  name: string
  industry: string
  company_size: CompanySizeSchema
  owner_id: string
  custom_industry: string | null
  description: string | null
  phone_number: string | null
  business_address: string | null
  website: string | null
  logo_url: string | null
  business_email: string | null
  business_registration_number: string | null
  tax_id: string | null
  business_license: string | null
  insurance_number: string | null
  selected_features: Array<string>
  primary_goals: Array<string>
  referral_source: ReferralSourceSchema | null
  onboarding_completed: boolean
  onboarding_completed_date: string | null
  timezone: string | null
  currency: string
  business_hours: {
    [key: string]: unknown
  } | null
  is_active: boolean
  max_team_members: number | null
  subscription_tier: string | null
  enabled_features: Array<string>
  created_date: string | null
  last_modified: string | null
}

/**
 * Business role options for API.
 */
export type BusinessRoleSchema =
  | "owner"
  | "admin"
  | "manager"
  | "employee"
  | "contractor"
  | "viewer"

/**
 * Response schema for business summary information.
 */
export type BusinessSummaryResponse = {
  id: string
  name: string
  industry: string
  company_size: CompanySizeSchema
  is_active: boolean
  created_date: string | null
  team_member_count: number | null
  onboarding_completed: boolean
}

/**
 * Request schema for updating a business.
 */
export type BusinessUpdateRequest = {
  name?: string | null
  industry?: string | null
  custom_industry?: string | null
  description?: string | null
  phone_number?: string | null
  business_address?: string | null
  website?: string | null
  logo_url?: string | null
  business_email?: string | null
  business_registration_number?: string | null
  tax_id?: string | null
  business_license?: string | null
  insurance_number?: string | null
  timezone?: string | null
  currency?: string | null
  /**
   * Business operating hours
   */
  business_hours?: {
    [key: string]: unknown
  } | null
  max_team_members?: number | null
  subscription_tier?: string | null
  enabled_features?: Array<string> | null
}

/**
 * Calendar event schema.
 */
export type CalendarEvent = {
  /**
   * Event ID
   */
  id?: string | null
  /**
   * Event title
   */
  title: string
  /**
   * Event description
   */
  description?: string | null
  /**
   * Event type
   */
  event_type?: CalendarEventType
  /**
   * Event start time
   */
  start_datetime: string
  /**
   * Event end time
   */
  end_datetime: string
  /**
   * All-day event
   */
  is_all_day?: boolean
  /**
   * Event timezone
   */
  timezone?: string
  /**
   * Recurrence pattern
   */
  recurrence_type?: RecurrenceType
  /**
   * Recurrence end date
   */
  recurrence_end_date?: string | null
  /**
   * Number of occurrences
   */
  recurrence_count?: number | null
  /**
   * Recurrence interval
   */
  recurrence_interval?: number
  /**
   * Days of week (0=Monday)
   */
  recurrence_days_of_week?: Array<number>
  /**
   * Blocks job scheduling
   */
  blocks_scheduling?: boolean
  /**
   * Allow emergency override
   */
  allows_emergency_override?: boolean
  created_date?: string | null
  last_modified?: string | null
  is_active?: boolean
}

/**
 * Calendar event response.
 */
export type CalendarEventResponse = {
  /**
   * Response message
   */
  message: string
  /**
   * Calendar event
   */
  event?: CalendarEvent | null
}

export type CalendarEventType =
  | "work_schedule"
  | "time_off"
  | "break"
  | "meeting"
  | "training"
  | "personal"

/**
 * Calendar preferences schema.
 */
export type CalendarPreferences = {
  /**
   * User timezone
   */
  timezone?: string
  /**
   * Preferred date format
   */
  date_format?: string
  /**
   * Time format (12h/24h)
   */
  time_format?: string
  /**
   * Week start day (0=Monday)
   */
  week_start_day?: number
  /**
   * Preferred template ID
   */
  preferred_working_hours_template_id?: string | null
  /**
   * Min time between jobs
   */
  min_time_between_jobs_minutes?: number
  /**
   * Max commute time
   */
  max_commute_time_minutes?: number
  /**
   * Allow back-to-back jobs
   */
  allows_back_to_back_jobs?: boolean
  /**
   * Required prep time
   */
  requires_prep_time_minutes?: number
  /**
   * Reminder times
   */
  job_reminder_minutes_before?: Array<number>
  /**
   * Schedule change notifications
   */
  schedule_change_notifications?: boolean
  /**
   * New job notifications
   */
  new_job_notifications?: boolean
  /**
   * Cancellation notifications
   */
  cancellation_notifications?: boolean
  /**
   * Auto-accept jobs during working hours
   */
  auto_accept_jobs_in_hours?: boolean
  /**
   * Auto-decline jobs outside hours
   */
  auto_decline_outside_hours?: boolean
  /**
   * Emergency availability
   */
  emergency_availability_outside_hours?: boolean
  /**
   * Weekend availability
   */
  weekend_availability?: boolean
  /**
   * Holiday availability
   */
  holiday_availability?: boolean
  /**
   * Travel time buffer
   */
  travel_buffer_percentage?: number
  /**
   * Job buffer time
   */
  job_buffer_minutes?: number
}

/**
 * Calendar preferences response.
 */
export type CalendarPreferencesResponse = {
  /**
   * Response message
   */
  message: string
  /**
   * Calendar preferences
   */
  preferences?: CalendarPreferences | null
}

/**
 * Company size options for API.
 */
export type CompanySizeSchema =
  | "just_me"
  | "small"
  | "medium"
  | "large"
  | "enterprise"

/**
 * Schema for contact activity summary response.
 */
export type ContactActivitySummaryResponse = {
  /**
   * Contact ID
   */
  contact_id: string
  /**
   * Total activities for this contact
   */
  total_activities: number
  /**
   * Date of last activity
   */
  last_activity_date?: string | null
  /**
   * Next scheduled activity date
   */
  next_scheduled_activity?: string | null
  /**
   * Activities grouped by type
   */
  activities_by_type: {
    [key: string]: number
  }
  /**
   * Number of overdue activities
   */
  overdue_activities: number
  /**
   * Number of upcoming activities
   */
  upcoming_activities: number
  /**
   * Engagement score based on activity frequency
   */
  activity_score: number
}

/**
 * Schema for contact address.
 */
export type ContactAddressSchema = {
  /**
   * Street address
   */
  street_address?: string | null
  /**
   * City
   */
  city?: string | null
  /**
   * State or province
   */
  state?: string | null
  /**
   * Postal or ZIP code
   */
  postal_code?: string | null
  /**
   * Country
   */
  country?: string | null
}

/**
 * Request schema for contact assignment.
 */
export type ContactAssignmentRequest = {
  /**
   * Contact IDs to assign
   */
  contact_ids: Array<string>
  /**
   * User ID to assign to (null to unassign)
   */
  assigned_to?: string | null
  /**
   * Assignment notes
   */
  notes?: string | null
}

/**
 * Response schema for bulk operations.
 */
export type ContactBulkOperationResponse = {
  /**
   * Number of contacts updated
   */
  updated_count: number
  /**
   * Whether operation was successful
   */
  success: boolean
  /**
   * Operation result message
   */
  message: string
}

/**
 * Request schema for bulk contact updates.
 */
export type ContactBulkUpdateRequest = {
  /**
   * Contact IDs to update
   */
  contact_ids: Array<string>
  /**
   * New status
   */
  status?: ContactStatus | null
  /**
   * New priority
   */
  priority?: ContactPriority | null
  /**
   * User ID to assign contacts to
   */
  assigned_to?: string | null
  /**
   * Tags to add
   */
  tags_to_add?: Array<string> | null
  /**
   * Tags to remove
   */
  tags_to_remove?: Array<string> | null
  /**
   * Custom fields to update
   */
  custom_fields?: {
    [key: string]: unknown
  } | null
}

/**
 * Request schema for contact type conversion.
 */
export type ContactConversionRequest = {
  /**
   * Target contact type
   */
  to_type: ContactType
  /**
   * Conversion notes
   */
  notes?: string | null
}

/**
 * Request schema for creating a new contact.
 */
export type ContactCreateRequest = {
  /**
   * Type of contact
   */
  contact_type: ContactType
  /**
   * Relationship status (auto-set based on contact_type if not provided)
   */
  relationship_status?: RelationshipStatus | null
  /**
   * Lifecycle stage (auto-set based on relationship_status if not provided)
   */
  lifecycle_stage?: LifecycleStage | null
  /**
   * First name
   */
  first_name?: string | null
  /**
   * Last name
   */
  last_name?: string | null
  /**
   * Company name
   */
  company_name?: string | null
  /**
   * Job title
   */
  job_title?: string | null
  /**
   * Email address
   */
  email?: string | null
  /**
   * Phone number
   */
  phone?: string | null
  /**
   * Mobile phone number
   */
  mobile_phone?: string | null
  /**
   * Website URL
   */
  website?: string | null
  /**
   * Contact address
   */
  address?: ContactAddressSchema | null
  /**
   * Contact priority
   */
  priority?: ContactPriority
  /**
   * Contact source
   */
  source?: ContactSource | null
  /**
   * Contact tags
   */
  tags?: Array<string>
  /**
   * Additional notes
   */
  notes?: string | null
  /**
   * Estimated value
   */
  estimated_value?: number | null
  /**
   * Currency code
   */
  currency?: string
  /**
   * Assigned user ID
   */
  assigned_to?: string | null
  /**
   * Custom fields
   */
  custom_fields?: {
    [key: string]: unknown
  }
}

/**
 * Request schema for creating contact interaction.
 */
export type ContactInteractionCreateRequest = {
  /**
   * Type of interaction
   */
  type: InteractionTypeSchema
  /**
   * Interaction description
   */
  description: string
  /**
   * Interaction outcome
   */
  outcome?: string | null
  /**
   * Next action to take
   */
  next_action?: string | null
  /**
   * Scheduled follow-up date
   */
  scheduled_follow_up?: string | null
}

/**
 * Response schema for contact interaction list.
 */
export type ContactInteractionListResponse = {
  interactions?: Array<ContactInteractionResponse>
  /**
   * Total number of interactions
   */
  total: number
  /**
   * Number of items skipped
   */
  skip: number
  /**
   * Number of items per page
   */
  limit: number
}

/**
 * Response schema for contact interaction.
 */
export type ContactInteractionResponse = {
  /**
   * Interaction ID
   */
  id: string
  /**
   * Contact ID
   */
  contact_id: string
  /**
   * Type of interaction
   */
  type: InteractionTypeSchema
  /**
   * Interaction description
   */
  description: string
  /**
   * Interaction timestamp
   */
  timestamp: string | null
  /**
   * Interaction outcome
   */
  outcome?: string | null
  /**
   * Next action to take
   */
  next_action?: string | null
  /**
   * Scheduled follow-up date
   */
  scheduled_follow_up?: string | null
  /**
   * User who performed the interaction (ID or object based on include_user_details)
   */
  performed_by: string | UserReferenceBasic | UserReferenceFull
}

/**
 * Response schema for contact list with pagination.
 */
export type ContactListResponse = {
  /**
   * List of contacts
   */
  contacts: Array<ContactResponse>
  /**
   * Total number of contacts
   */
  total_count: number
  /**
   * Current page number
   */
  page: number
  /**
   * Number of contacts per page
   */
  per_page: number
  /**
   * Whether there are more pages
   */
  has_next: boolean
  /**
   * Whether there are previous pages
   */
  has_previous: boolean
}

/**
 * Contact priority enumeration.
 */
export type ContactPriority = "low" | "medium" | "high" | "urgent"

/**
 * Response schema for contact data with robust validation.
 */
export type ContactResponse = {
  /**
   * Contact ID
   */
  id: string
  /**
   * Business ID
   */
  business_id: string
  /**
   * Contact type
   */
  contact_type: ContactType
  /**
   * Contact status
   */
  status: ContactStatus
  /**
   * Relationship status
   */
  relationship_status: RelationshipStatus
  /**
   * Lifecycle stage
   */
  lifecycle_stage: LifecycleStage
  /**
   * First name
   */
  first_name?: string | null
  /**
   * Last name
   */
  last_name?: string | null
  /**
   * Company name
   */
  company_name?: string | null
  /**
   * Job title
   */
  job_title?: string | null
  /**
   * Email address
   */
  email?: string | null
  /**
   * Phone number
   */
  phone?: string | null
  /**
   * Mobile phone number
   */
  mobile_phone?: string | null
  /**
   * Website URL
   */
  website?: string | null
  /**
   * Contact address
   */
  address?: ContactAddressSchema | null
  /**
   * Contact priority
   */
  priority: ContactPriority
  /**
   * Contact source
   */
  source?: ContactSource | null
  /**
   * Contact tags
   */
  tags?: Array<string>
  /**
   * Additional notes
   */
  notes?: string | null
  /**
   * Estimated value
   */
  estimated_value?: number | null
  /**
   * Currency code
   */
  currency?: string
  /**
   * Assigned user (ID or object based on include_user_details)
   */
  assigned_to?: string | UserReferenceBasic | UserReferenceFull | null
  /**
   * Creator user (ID or object based on include_user_details)
   */
  created_by?: string | UserReferenceBasic | UserReferenceFull | null
  /**
   * Custom fields
   */
  custom_fields?: {
    [key: string]: unknown
  }
  /**
   * Status change history
   */
  status_history?: Array<StatusHistoryEntrySchema>
  /**
   * Recent interactions
   */
  interaction_history?: Array<ContactInteractionResponse>
  /**
   * Creation date
   */
  created_date?: string | null
  /**
   * Last modification date
   */
  last_modified?: string | null
  /**
   * Last contact date
   */
  last_contacted?: string | null
  /**
   * Display name
   */
  display_name: string
  /**
   * Primary contact method
   */
  primary_contact_method: string
  /**
   * Human-readable type
   */
  type_display: string
  /**
   * Human-readable status
   */
  status_display: string
  /**
   * Human-readable priority
   */
  priority_display: string
  /**
   * Human-readable source
   */
  source_display: string
  /**
   * Human-readable relationship status
   */
  relationship_status_display: string
  /**
   * Human-readable lifecycle stage
   */
  lifecycle_stage_display: string
}

/**
 * Request schema for searching contacts.
 */
export type ContactSearchRequest = {
  /**
   * Search term
   */
  search_term?: string | null
  /**
   * Filter by contact type
   */
  contact_type?: ContactType | null
  /**
   * Filter by status
   */
  status?: ContactStatus | null
  /**
   * Filter by priority
   */
  priority?: ContactPriority | null
  /**
   * Filter by source
   */
  source?: ContactSource | null
  /**
   * Filter by assigned user
   */
  assigned_to?: string | null
  /**
   * Filter by tags (OR operation)
   */
  tags?: Array<string> | null
  /**
   * Filter contacts with/without email
   */
  has_email?: boolean | null
  /**
   * Filter contacts with/without phone
   */
  has_phone?: boolean | null
  /**
   * Minimum estimated value
   */
  min_estimated_value?: number | null
  /**
   * Maximum estimated value
   */
  max_estimated_value?: number | null
  /**
   * Created after date
   */
  created_after?: string | null
  /**
   * Created before date
   */
  created_before?: string | null
  /**
   * Last contacted after date
   */
  last_contacted_after?: string | null
  /**
   * Last contacted before date
   */
  last_contacted_before?: string | null
  /**
   * Filter never contacted contacts
   */
  never_contacted?: boolean | null
  /**
   * Number of records to skip
   */
  skip?: number
  /**
   * Maximum number of records to return
   */
  limit?: number
  /**
   * Field to sort by
   */
  sort_by?: string
  /**
   * Sort order
   */
  sort_order?: string
  /**
   * Level of user detail to include
   */
  include_user_details?: UserDetailLevel
}

/**
 * Contact source enumeration.
 */
export type ContactSource =
  | "website"
  | "referral"
  | "social_media"
  | "email_campaign"
  | "phone_call"
  | "walk_in"
  | "trade_show"
  | "advertising"
  | "online"
  | "other"

/**
 * Response schema for contact statistics.
 */
export type ContactStatisticsResponse = {
  /**
   * Total number of contacts
   */
  total_contacts: number
  /**
   * Number of active contacts
   */
  active_contacts: number
  /**
   * Number of inactive contacts
   */
  inactive_contacts: number
  /**
   * Number of archived contacts
   */
  archived_contacts: number
  /**
   * Number of blocked contacts
   */
  blocked_contacts: number
  /**
   * Number of customers
   */
  customers: number
  /**
   * Number of leads
   */
  leads: number
  /**
   * Number of prospects
   */
  prospects: number
  /**
   * Number of vendors
   */
  vendors: number
  /**
   * Number of partners
   */
  partners: number
  /**
   * Number of contractors
   */
  contractors: number
  /**
   * Number of high priority contacts
   */
  high_priority: number
  /**
   * Number of medium priority contacts
   */
  medium_priority: number
  /**
   * Number of low priority contacts
   */
  low_priority: number
  /**
   * Number of urgent priority contacts
   */
  urgent_priority: number
  /**
   * Number of contacts with email
   */
  with_email: number
  /**
   * Number of contacts with phone
   */
  with_phone: number
  /**
   * Number of assigned contacts
   */
  assigned_contacts: number
  /**
   * Number of unassigned contacts
   */
  unassigned_contacts: number
  /**
   * Number of never contacted contacts
   */
  never_contacted: number
  /**
   * Number of recently contacted contacts
   */
  recently_contacted: number
  /**
   * Number of high value contacts
   */
  high_value_contacts: number
  /**
   * Total estimated value
   */
  total_estimated_value: number
  /**
   * Average estimated value
   */
  average_estimated_value: number
}

/**
 * Contact status enumeration.
 */
export type ContactStatus = "active" | "inactive" | "archived" | "blocked"

/**
 * Request schema for updating contact relationship status.
 */
export type ContactStatusUpdateRequest = {
  /**
   * New relationship status
   */
  relationship_status: RelationshipStatus
  /**
   * New lifecycle stage (optional, will be auto-set if not provided)
   */
  lifecycle_stage?: LifecycleStage | null
  /**
   * Reason for status change
   */
  reason?: string | null
  /**
   * Additional notes
   */
  notes?: string | null
}

/**
 * Response schema for contact status update.
 */
export type ContactStatusUpdateResponse = {
  /**
   * Contact ID
   */
  contact_id: string
  /**
   * Previous relationship status
   */
  old_status: RelationshipStatus
  /**
   * New relationship status
   */
  new_status: RelationshipStatus
  /**
   * Previous lifecycle stage
   */
  old_lifecycle_stage: LifecycleStage
  /**
   * New lifecycle stage
   */
  new_lifecycle_stage: LifecycleStage
  /**
   * User who made the change
   */
  changed_by: string
  /**
   * Change timestamp
   */
  timestamp: string
  /**
   * Reason for status change
   */
  reason?: string | null
}

/**
 * Request schema for contact tag operations.
 */
export type ContactTagOperationRequest = {
  /**
   * Contact IDs
   */
  contact_ids: Array<string>
  /**
   * Tags to operate on
   */
  tags: Array<string>
  /**
   * Operation type
   */
  operation: string
}

/**
 * Contact type enumeration.
 */
export type ContactType =
  | "prospect"
  | "lead"
  | "customer"
  | "partner"
  | "vendor"

/**
 * Request schema for updating a contact.
 */
export type ContactUpdateRequest = {
  /**
   * Type of contact
   */
  contact_type?: ContactType | null
  /**
   * First name
   */
  first_name?: string | null
  /**
   * Last name
   */
  last_name?: string | null
  /**
   * Company name
   */
  company_name?: string | null
  /**
   * Job title
   */
  job_title?: string | null
  /**
   * Email address
   */
  email?: string | null
  /**
   * Phone number
   */
  phone?: string | null
  /**
   * Mobile phone number
   */
  mobile_phone?: string | null
  /**
   * Website URL
   */
  website?: string | null
  /**
   * Contact address
   */
  address?: ContactAddressSchema | null
  /**
   * Contact priority
   */
  priority?: ContactPriority | null
  /**
   * Contact source
   */
  source?: ContactSource | null
  /**
   * Contact tags
   */
  tags?: Array<string> | null
  /**
   * Additional notes
   */
  notes?: string | null
  /**
   * Estimated value
   */
  estimated_value?: number | null
  /**
   * Currency code
   */
  currency?: string | null
  /**
   * Assigned user ID
   */
  assigned_to?: string | null
  /**
   * Custom fields
   */
  custom_fields?: {
    [key: string]: unknown
  } | null
}

/**
 * Request to create calendar event.
 */
export type CreateCalendarEventRequest = {
  /**
   * Event title
   */
  title: string
  /**
   * Event description
   */
  description?: string | null
  /**
   * Event type
   */
  event_type?: CalendarEventType
  /**
   * Event start time
   */
  start_datetime: string
  /**
   * Event end time
   */
  end_datetime: string
  /**
   * All-day event
   */
  is_all_day?: boolean
  /**
   * Event timezone
   */
  timezone?: string
  /**
   * Recurrence pattern
   */
  recurrence_type?: RecurrenceType
  /**
   * Recurrence end date
   */
  recurrence_end_date?: string | null
  /**
   * Number of occurrences
   */
  recurrence_count?: number | null
  /**
   * Recurrence interval
   */
  recurrence_interval?: number
  /**
   * Days of week (0=Monday)
   */
  recurrence_days_of_week?: Array<number>
  /**
   * Blocks job scheduling
   */
  blocks_scheduling?: boolean
  /**
   * Allow emergency override
   */
  allows_emergency_override?: boolean
}

/**
 * Request to create time off.
 */
export type CreateTimeOffRequest = {
  /**
   * Type of time off
   */
  time_off_type: TimeOffType
  /**
   * Start date
   */
  start_date: string
  /**
   * End date
   */
  end_date: string
  /**
   * Reason for time off
   */
  reason?: string | null
  /**
   * Additional notes
   */
  notes?: string | null
  /**
   * Affects job scheduling
   */
  affects_scheduling?: boolean
  /**
   * Allow emergency contact
   */
  emergency_contact_allowed?: boolean
}

/**
 * Request to create working hours template.
 */
export type CreateWorkingHoursTemplateRequest = {
  /**
   * Template name
   */
  name: string
  /**
   * Template description
   */
  description?: string | null
  monday_start?: string | null
  monday_end?: string | null
  tuesday_start?: string | null
  tuesday_end?: string | null
  wednesday_start?: string | null
  wednesday_end?: string | null
  thursday_start?: string | null
  thursday_end?: string | null
  friday_start?: string | null
  friday_end?: string | null
  saturday_start?: string | null
  saturday_end?: string | null
  sunday_start?: string | null
  sunday_end?: string | null
  break_duration_minutes?: number
  lunch_start_time?: string | null
  lunch_duration_minutes?: number
  allows_flexible_start?: boolean
  flexible_start_window_minutes?: number
  allows_overtime?: boolean
  max_overtime_hours_per_day?: number
}

/**
 * Daily performance metrics.
 */
export type DailyPerformance = {
  /**
   * Performance date
   */
  performance_date: string
  /**
   * Jobs completed
   */
  jobs_completed: number
  /**
   * Jobs in progress
   */
  jobs_in_progress: number
  /**
   * Jobs delayed
   */
  jobs_delayed: number
  /**
   * Average delay in minutes
   */
  average_delay_minutes: string
  /**
   * On-time percentage
   */
  on_time_percentage: string
  /**
   * Total travel time
   */
  total_travel_time_minutes: string
  /**
   * Utilization rate
   */
  utilization_rate_percent: string
}

/**
 * Schema for dashboard activities overview.
 */
export type DashboardActivitiesResponse = {
  /**
   * Overdue activities
   */
  overdue_activities: Array<ActivityResponse>
  /**
   * Upcoming activities
   */
  upcoming_activities: Array<ActivityResponse>
  /**
   * Recent activities
   */
  recent_activities: Array<ActivityResponse>
  /**
   * Activity statistics
   */
  activity_statistics: ActivityStatisticsResponse
  /**
   * Due reminders
   */
  reminders_due: Array<ActivityReminderResponse>
  /**
   * Number of high priority activities
   */
  high_priority_count: number
  /**
   * Completion rate percentage
   */
  completion_rate: number
}

/**
 * Schedule disruption information.
 */
export type Disruption = {
  /**
   * Type of disruption
   */
  type: DisruptionType
  /**
   * Job IDs affected by disruption
   */
  affected_job_ids: Array<string>
  /**
   * User IDs affected by disruption
   */
  affected_user_ids?: Array<string>
  /**
   * Severity of disruption
   */
  severity: DisruptionSeverity
  /**
   * Expected duration in minutes
   */
  expected_duration_minutes?: number | null
  /**
   * Location coordinates (lat, lng)
   */
  location?: {
    [key: string]: number
  } | null
  /**
   * Disruption description
   */
  description?: string | null
}

/**
 * Severity levels for disruptions.
 */
export type DisruptionSeverity = "low" | "medium" | "high" | "critical"

/**
 * Types of schedule disruptions.
 */
export type DisruptionType =
  | "traffic_delay"
  | "weather"
  | "emergency_job"
  | "resource_unavailable"
  | "customer_reschedule"
  | "equipment_failure"

/**
 * Schema for Google Sign-In with ID token from iOS app.
 */
export type GoogleSignInRequest = {
  /**
   * ID token from Google Sign-In
   */
  id_token: string
  /**
   * Access token from Google
   */
  access_token?: string | null
  /**
   * Email from Google
   */
  email?: string | null
  /**
   * Full name from Google
   */
  full_name?: string | null
  /**
   * Given name from Google
   */
  given_name?: string | null
  /**
   * Family name from Google
   */
  family_name?: string | null
  /**
   * Profile picture URL from Google
   */
  picture_url?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

/**
 * Improvement recommendation.
 */
export type ImprovementRecommendation = {
  /**
   * Recommendation type
   */
  type: string
  /**
   * Recommendation description
   */
  description: string
  /**
   * Priority level
   */
  priority: string
  /**
   * Expected impact
   */
  expected_impact: string
  /**
   * Implementation effort
   */
  implementation_effort: string
  /**
   * Estimated ROI percentage
   */
  estimated_roi_percent?: string | null
}

/**
 * Schema for interaction types.
 */
export type InteractionTypeSchema =
  | "call"
  | "email"
  | "meeting"
  | "proposal"
  | "quote"
  | "contract"
  | "service"
  | "follow_up"
  | "note"

/**
 * Invitation status options for API.
 */
export type InvitationStatusSchema =
  | "pending"
  | "accepted"
  | "declined"
  | "expired"
  | "cancelled"

/**
 * Schema for job action responses.
 */
export type JobActionResponse = {
  success?: boolean
  message: string
  job_id?: string | null
}

/**
 * Schema for job address.
 */
export type JobAddressSchema = {
  street_address: string
  city: string
  state: string
  postal_code: string
  country?: string
  latitude?: number | null
  longitude?: number | null
  access_notes?: string | null
}

/**
 * Schema for job assignment request.
 */
export type JobAssignmentRequest = {
  user_ids: Array<string>
  replace_existing?: boolean
}

/**
 * Schema for bulk job action responses.
 */
export type JobBulkActionResponse = {
  success?: boolean
  message: string
  updated_count: number
  failed_count?: number
  errors?: Array<string> | null
}

/**
 * Schema for bulk job update request.
 */
export type JobBulkUpdateRequest = {
  job_ids: Array<string>
  status?: JobStatus | null
  assigned_to?: string | null
  tags_to_add?: Array<string> | null
  tags_to_remove?: Array<string> | null
  priority?: JobPriority | null
}

/**
 * Lightweight contact schema for job responses.
 */
export type JobContactSchema = {
  id: string
  display_name: string
  company_name?: string | null
  email?: string | null
  phone?: string | null
  mobile_phone?: string | null
  primary_contact_method: string
}

/**
 * Schema for job cost estimation.
 */
export type JobCostEstimateSchema_Input = {
  labor_cost?: number | string
  material_cost?: number | string
  equipment_cost?: number | string
  overhead_cost?: number | string
  markup_percentage?: number | string
  tax_percentage?: number | string
  discount_amount?: number | string
}

/**
 * Schema for job cost estimation.
 */
export type JobCostEstimateSchema_Output = {
  labor_cost?: string
  material_cost?: string
  equipment_cost?: string
  overhead_cost?: string
  markup_percentage?: string
  tax_percentage?: string
  discount_amount?: string
}

/**
 * Schema for job creation request.
 */
export type JobCreateRequest = {
  contact_id?: string | null
  job_number?: string | null
  title: string
  description?: string | null
  job_type: JobType
  priority?: JobPriority
  source?: JobSource
  job_address: JobAddressSchema
  scheduled_start?: string | null
  scheduled_end?: string | null
  assigned_to?: Array<string> | null
  tags?: Array<string> | null
  notes?: string | null
  customer_requirements?: string | null
  time_tracking?: JobTimeTrackingSchema_Input | null
  cost_estimate?: JobCostEstimateSchema_Input | null
  custom_fields?: {
    [key: string]: unknown
  } | null
}

/**
 * Schema for paginated job list response.
 */
export type JobListPaginatedResponse = {
  jobs: Array<JobListResponse>
  total: number
  skip: number
  limit: number
  has_more: boolean
}

/**
 * Schema for job list response with robust validation.
 */
export type JobListResponse = {
  /**
   * Job ID
   */
  id: string
  /**
   * Contact ID
   */
  contact_id?: string | null
  /**
   * Contact details
   */
  contact?: JobContactSchema | null
  /**
   * Job number
   */
  job_number: string
  /**
   * Job title
   */
  title: string
  /**
   * Job type
   */
  job_type: JobType
  /**
   * Job status
   */
  status: JobStatus
  /**
   * Job priority
   */
  priority: JobPriority
  /**
   * Scheduled start time
   */
  scheduled_start?: string | null
  /**
   * Scheduled end time
   */
  scheduled_end?: string | null
  /**
   * Assigned user IDs
   */
  assigned_to?: Array<string>
  /**
   * Estimated revenue
   */
  estimated_revenue: string
  /**
   * Whether job is overdue
   */
  is_overdue: boolean
  /**
   * Whether job is emergency
   */
  is_emergency: boolean
  /**
   * Creation date
   */
  created_date?: string | null
  /**
   * Last modification date
   */
  last_modified?: string | null
  /**
   * Human-readable status
   */
  status_display: string
  /**
   * Human-readable priority
   */
  priority_display: string
  /**
   * Human-readable type
   */
  type_display: string
}

/**
 * Job priority enumeration.
 */
export type JobPriority = "low" | "medium" | "high" | "urgent" | "emergency"

/**
 * Schema for job response with robust validation.
 */
export type JobResponse = {
  /**
   * Job ID
   */
  id: string
  /**
   * Business ID
   */
  business_id: string
  /**
   * Contact ID
   */
  contact_id?: string | null
  /**
   * Contact details
   */
  contact?: JobContactSchema | null
  /**
   * Job number
   */
  job_number: string
  /**
   * Job title
   */
  title: string
  /**
   * Job description
   */
  description?: string | null
  /**
   * Job type
   */
  job_type: JobType
  /**
   * Job status
   */
  status: JobStatus
  /**
   * Job priority
   */
  priority: JobPriority
  /**
   * Job source
   */
  source: JobSource
  /**
   * Job address
   */
  job_address: JobAddressSchema
  /**
   * Scheduled start time
   */
  scheduled_start?: string | null
  /**
   * Scheduled end time
   */
  scheduled_end?: string | null
  /**
   * Actual start time
   */
  actual_start?: string | null
  /**
   * Actual end time
   */
  actual_end?: string | null
  /**
   * Assigned user IDs
   */
  assigned_to?: Array<string>
  /**
   * Creator user ID
   */
  created_by: string
  /**
   * Time tracking details
   */
  time_tracking: JobTimeTrackingSchema_Output
  /**
   * Cost estimate details
   */
  cost_estimate: JobCostEstimateSchema_Output
  /**
   * Job tags
   */
  tags?: Array<string>
  /**
   * Job notes
   */
  notes?: string | null
  /**
   * Internal notes
   */
  internal_notes?: string | null
  /**
   * Customer requirements
   */
  customer_requirements?: string | null
  /**
   * Completion notes
   */
  completion_notes?: string | null
  /**
   * Custom fields
   */
  custom_fields?: {
    [key: string]: unknown
  }
  /**
   * Creation date
   */
  created_date?: string | null
  /**
   * Last modification date
   */
  last_modified?: string | null
  /**
   * Completion date
   */
  completed_date?: string | null
  /**
   * Whether job is overdue
   */
  is_overdue: boolean
  /**
   * Whether job is emergency
   */
  is_emergency: boolean
  /**
   * Duration in days
   */
  duration_days?: number | null
  /**
   * Estimated revenue
   */
  estimated_revenue: string
  /**
   * Profit margin
   */
  profit_margin: string
  /**
   * Human-readable status
   */
  status_display: string
  /**
   * Human-readable priority
   */
  priority_display: string
  /**
   * Human-readable type
   */
  type_display: string
}

/**
 * Schema for job schedule response.
 */
export type JobScheduleResponse = {
  date: string
  jobs: Array<JobListResponse>
  total_jobs: number
  total_hours: string
  conflicts: Array<{
    [key: string]: unknown
  }>
}

/**
 * Schema for job search request.
 */
export type JobSearchRequest = {
  search_term?: string | null
  job_type?: JobType | null
  status?: JobStatus | null
  priority?: JobPriority | null
  source?: JobSource | null
  assigned_to?: string | null
  contact_id?: string | null
  tags?: Array<string> | null
  scheduled_start_from?: string | null
  scheduled_start_to?: string | null
  scheduled_end_from?: string | null
  scheduled_end_to?: string | null
  created_from?: string | null
  created_to?: string | null
  is_overdue?: boolean | null
  is_emergency?: boolean | null
  min_revenue?: number | string | null
  max_revenue?: number | string | null
  skip?: number
  limit?: number
  sort_by?: string
  sort_order?: string
}

/**
 * Job source enumeration.
 */
export type JobSource =
  | "website"
  | "google_ads"
  | "social_media"
  | "referral"
  | "phone_call"
  | "phone"
  | "walk_in"
  | "email_marketing"
  | "trade_show"
  | "direct_mail"
  | "yellow_pages"
  | "repeat_customer"
  | "partner"
  | "existing_customer"
  | "cold_outreach"
  | "emergency_call"
  | "emergency"
  | "event"
  | "direct"
  | "other"

/**
 * Schema for job statistics response.
 */
export type JobStatisticsResponse = {
  total_jobs: number
  jobs_by_status: {
    [key: string]: number
  }
  jobs_by_type: {
    [key: string]: number
  }
  jobs_by_priority: {
    [key: string]: number
  }
  overdue_jobs: number
  emergency_jobs: number
  jobs_in_progress: number
  completed_this_month: number
  revenue_this_month: string
  average_job_value: string
  top_job_types: Array<{
    [key: string]: unknown
  }>
  completion_rate: number
  on_time_completion_rate: number
}

/**
 * Job status enumeration.
 */
export type JobStatus =
  | "draft"
  | "quoted"
  | "scheduled"
  | "in_progress"
  | "on_hold"
  | "completed"
  | "cancelled"
  | "invoiced"
  | "paid"

/**
 * Schema for job status update request.
 */
export type JobStatusUpdateRequest = {
  status: JobStatus
  notes?: string | null
}

/**
 * Schema for job time tracking.
 */
export type JobTimeTrackingSchema_Input = {
  estimated_hours?: number | string | null
  actual_hours?: number | string | null
  billable_hours?: number | string | null
  start_time?: string | null
  end_time?: string | null
  break_time_minutes?: number
}

/**
 * Schema for job time tracking.
 */
export type JobTimeTrackingSchema_Output = {
  estimated_hours?: string | null
  actual_hours?: string | null
  billable_hours?: string | null
  start_time?: string | null
  end_time?: string | null
  break_time_minutes?: number
}

/**
 * Job type enumeration.
 */
export type JobType =
  | "service"
  | "project"
  | "maintenance"
  | "installation"
  | "repair"
  | "inspection"
  | "consultation"
  | "quote"
  | "follow_up"
  | "emergency"

/**
 * Schema for job update request.
 */
export type JobUpdateRequest = {
  title?: string | null
  description?: string | null
  job_type?: JobType | null
  priority?: JobPriority | null
  source?: JobSource | null
  job_address?: JobAddressSchema | null
  scheduled_start?: string | null
  scheduled_end?: string | null
  assigned_to?: Array<string> | null
  tags?: Array<string> | null
  notes?: string | null
  internal_notes?: string | null
  customer_requirements?: string | null
  completion_notes?: string | null
  time_tracking?: JobTimeTrackingSchema_Input | null
  cost_estimate?: JobCostEstimateSchema_Input | null
  custom_fields?: {
    [key: string]: unknown
  } | null
}

/**
 * Schema for job workload response.
 */
export type JobWorkloadResponse = {
  user_id: string
  total_assigned_jobs: number
  jobs_in_progress: number
  overdue_jobs: number
  scheduled_this_week: number
  total_estimated_hours: string
  total_actual_hours: string
  utilization_rate: number
  completion_rate: number
}

/**
 * Lifecycle stage enumeration.
 */
export type LifecycleStage =
  | "awareness"
  | "interest"
  | "consideration"
  | "intent"
  | "evaluation"
  | "purchase"
  | "retention"
  | "advocacy"

/**
 * Location data for tracking.
 */
export type LocationData = {
  /**
   * Latitude coordinate
   */
  latitude: number
  /**
   * Longitude coordinate
   */
  longitude: number
  /**
   * Location accuracy in meters
   */
  accuracy_meters: number
  /**
   * Location timestamp
   */
  timestamp: string
}

/**
 * Request to update user location.
 */
export type LocationUpdateRequest = {
  /**
   * User ID
   */
  user_id: string
  /**
   * Location data
   */
  location: LocationData
  /**
   * User status
   */
  status: string
}

/**
 * Generic message response (legacy compatibility).
 */
export type Message = {
  message: string
}

/**
 * Schema for middleware health response.
 */
export type MiddlewareHealthResponse = {
  status: string
  total_middlewares: number
  cors_enabled: boolean
  cors_origins: Array<unknown>
  middlewares: Array<unknown>
  request_info: {
    [key: string]: unknown
  }
}

/**
 * Schema for middleware test response.
 */
export type MiddlewareTestResponse = {
  authentication_status: string
  business_context_status: string
  user_info: {
    [key: string]: unknown
  }
  business_info: {
    [key: string]: unknown
  }
  headers: {
    [key: string]: string
  }
}

/**
 * Schema for OAuth sign-in response.
 */
export type OAuthSignInResponse = {
  /**
   * Supabase access token
   */
  access_token: string
  /**
   * Supabase refresh token
   */
  refresh_token: string
  /**
   * Token expiration time in seconds
   */
  expires_in: number
  /**
   * Token type
   */
  token_type?: string
  /**
   * User information
   */
  user: AuthUserResponse
  /**
   * Whether this is a newly created user
   */
  is_new_user: boolean
}

/**
 * Available optimization algorithms.
 */
export type OptimizationAlgorithm =
  | "intelligent"
  | "genetic"
  | "local_search"
  | "greedy"

/**
 * Optimization performance metrics.
 */
export type OptimizationMetrics = {
  /**
   * Total jobs processed
   */
  total_jobs: number
  /**
   * Successfully scheduled jobs
   */
  successfully_scheduled: number
  /**
   * Scheduling success rate
   */
  scheduling_success_rate: string
  /**
   * Total travel time
   */
  total_travel_time_minutes: string
  /**
   * Average travel time per job
   */
  average_travel_time_per_job: string
  /**
   * Average confidence score
   */
  average_confidence_score: string
  /**
   * Travel time savings percentage
   */
  travel_time_savings_percent?: string | null
  /**
   * Utilization improvement percentage
   */
  utilization_improvement_percent?: string | null
  /**
   * Optimization timestamp
   */
  optimization_timestamp: string
}

/**
 * Optimized job assignment result.
 */
export type OptimizedJobAssignment = {
  /**
   * Job ID
   */
  job_id: string
  /**
   * Assigned user ID
   */
  assigned_user_id?: string | null
  /**
   * Scheduled start time
   */
  scheduled_start?: string | null
  /**
   * Scheduled end time
   */
  scheduled_end?: string | null
  /**
   * Estimated travel time
   */
  estimated_travel_time_minutes: string
  /**
   * Assignment confidence score
   */
  confidence_score: string
  /**
   * Alternative candidate user IDs
   */
  alternative_candidates?: Array<string>
  /**
   * Optimization notes
   */
  optimization_notes?: string | null
}

export type OTPVerificationRequest = {
  phone: string
  token: string
}

export type PhoneSignInRequest = {
  phone: string
  password: string
}

export type PhoneSignUpRequest = {
  phone: string
  password: string
  full_name?: string | null
}

/**
 * Predictive scheduling insight.
 */
export type PredictiveInsight = {
  /**
   * Prediction type
   */
  prediction_type: string
  /**
   * Forecast date
   */
  forecast_date: string
  /**
   * Prediction confidence
   */
  prediction_confidence: string
  /**
   * Impact description
   */
  impact_description: string
  /**
   * Recommended actions
   */
  recommended_actions: Array<string>
}

/**
 * Request for real-time schedule adaptation.
 */
export type RealTimeAdaptationRequest = {
  /**
   * Disruption information
   */
  disruption: Disruption
  /**
   * Adaptation preferences
   */
  adaptation_preferences?: AdaptationPreferences
}

/**
 * Response for real-time adaptation.
 */
export type RealTimeAdaptationResponse = {
  /**
   * Adaptation ID
   */
  adaptation_id: string
  /**
   * Adaptation status
   */
  status: string
  /**
   * Adapted job assignments
   */
  adapted_assignments: Array<AdaptedJob>
  /**
   * Impact summary
   */
  impact_summary: AdaptationImpactSummary
  /**
   * Notifications sent
   */
  notifications_sent: Array<string>
  /**
   * Response message
   */
  message: string
  /**
   * Recommendations
   */
  recommendations?: Array<string>
}

/**
 * Real-time job status.
 */
export type RealTimeJobStatus = {
  /**
   * Job ID
   */
  job_id: string
  /**
   * Assigned user ID
   */
  assigned_user_id: string
  /**
   * Current status
   */
  status: string
  /**
   * Scheduled start time
   */
  scheduled_start: string
  /**
   * Actual start time
   */
  actual_start?: string | null
  /**
   * Estimated completion time
   */
  estimated_completion: string
  /**
   * Current location
   */
  current_location?: {
    [key: string]: number
  } | null
  /**
   * Delay in minutes
   */
  delay_minutes: number
  /**
   * Active alerts
   */
  alerts?: Array<string>
}

/**
 * Response for real-time schedule status.
 */
export type RealTimeScheduleStatusResponse = {
  /**
   * Current timestamp
   */
  current_time: string
  /**
   * Active job statuses
   */
  active_jobs: Array<RealTimeJobStatus>
  /**
   * Daily performance metrics
   */
  daily_performance: DailyPerformance
  /**
   * System alerts
   */
  alerts?: Array<string>
  /**
   * System health status
   */
  system_health: string
}

export type RecurrenceType =
  | "none"
  | "daily"
  | "weekly"
  | "biweekly"
  | "monthly"
  | "custom"

/**
 * Referral source options for API.
 */
export type ReferralSourceSchema =
  | "search_engine"
  | "social_media"
  | "friend_referral"
  | "advertisement"
  | "app_store"
  | "other"

/**
 * Relationship status enumeration.
 */
export type RelationshipStatus =
  | "prospect"
  | "qualified"
  | "proposal"
  | "negotiation"
  | "closed_won"
  | "closed_lost"
  | "dormant"

/**
 * Response for scheduling analytics.
 */
export type SchedulingAnalyticsResponse = {
  /**
   * Analytics period
   */
  period: TimeWindow
  /**
   * Key performance indicators
   */
  kpis: SchedulingKPIs
  /**
   * Improvement recommendations
   */
  recommendations: Array<ImprovementRecommendation>
  /**
   * Predictive insights
   */
  predictions: Array<PredictiveInsight>
  /**
   * Trend analysis
   */
  trend_analysis: Array<TrendAnalysis>
  /**
   * Data quality score
   */
  data_quality_score?: string
}

/**
 * Scheduling constraints configuration.
 */
export type SchedulingConstraints = {
  /**
   * Maximum travel time per job
   */
  max_travel_time_minutes?: number | null
  /**
   * Working hours start time
   */
  working_hours_start?: string | null
  /**
   * Working hours end time
   */
  working_hours_end?: string | null
  /**
   * Maximum jobs per user per day
   */
  max_jobs_per_user?: number | null
  /**
   * Require exact skill matching
   */
  require_skill_match?: boolean
  /**
   * Allow overtime scheduling
   */
  allow_overtime?: boolean
  /**
   * Optimization objectives in priority order
   */
  optimization_objectives?: Array<string>
}

/**
 * Scheduling key performance indicators.
 */
export type SchedulingKPIs = {
  /**
   * Average jobs per technician per day
   */
  average_jobs_per_technician_per_day: string
  /**
   * Average travel time per job
   */
  average_travel_time_per_job_minutes: string
  /**
   * First time fix rate percentage
   */
  first_time_fix_rate_percent: string
  /**
   * Resource utilization rate
   */
  resource_utilization_rate_percent: string
  /**
   * Schedule adherence rate
   */
  schedule_adherence_rate_percent: string
  /**
   * Customer satisfaction score
   */
  customer_satisfaction_score?: string | null
  /**
   * On-time completion rate
   */
  on_time_completion_rate_percent: string
  /**
   * Emergency response time
   */
  emergency_response_time_minutes?: string | null
}

/**
 * Request for schedule optimization.
 */
export type SchedulingOptimizationRequest = {
  /**
   * Specific job IDs to optimize (null for all unscheduled)
   */
  job_ids?: Array<string> | null
  /**
   * Time window for optimization
   */
  time_window?: TimeWindow | null
  /**
   * Optimization constraints
   */
  constraints?: SchedulingConstraints
  /**
   * Baseline metrics for comparison
   */
  baseline_metrics?: {
    [key: string]: unknown
  } | null
  /**
   * Send notifications to assigned users
   */
  notify_users?: boolean
  /**
   * Algorithm to use
   */
  optimization_algorithm?: OptimizationAlgorithm
  /**
   * Update analytics after optimization
   */
  update_analytics?: boolean
}

/**
 * Response for schedule optimization.
 */
export type SchedulingOptimizationResponse = {
  /**
   * Optimization ID
   */
  optimization_id: string
  /**
   * Optimized job assignments
   */
  optimized_assignments: Array<OptimizedJobAssignment>
  /**
   * Optimization metrics
   */
  optimization_metrics: OptimizationMetrics
  /**
   * Optimization success status
   */
  success: boolean
  /**
   * Response message
   */
  message: string
  /**
   * Optimization warnings
   */
  warnings?: Array<string>
}

export type SendOTPRequest = {
  phone: string
}

/**
 * Request to set user working hours.
 */
export type SetUserWorkingHoursRequest = {
  /**
   * Use existing template
   */
  template_id?: string | null
  monday_start?: string | null
  monday_end?: string | null
  tuesday_start?: string | null
  tuesday_end?: string | null
  wednesday_start?: string | null
  wednesday_end?: string | null
  thursday_start?: string | null
  thursday_end?: string | null
  friday_start?: string | null
  friday_end?: string | null
  saturday_start?: string | null
  saturday_end?: string | null
  sunday_start?: string | null
  sunday_end?: string | null
  break_duration_minutes?: number
  lunch_start_time?: string | null
  lunch_duration_minutes?: number
}

export type SignInRequest = {
  email: string
  password: string
}

export type SignUpRequest = {
  email: string
  password: string
  full_name?: string | null
}

/**
 * Schema for status history entry.
 */
export type StatusHistoryEntrySchema = {
  /**
   * Status history entry ID
   */
  id: string
  /**
   * Previous status
   */
  from_status?: RelationshipStatus | null
  /**
   * New status
   */
  to_status: RelationshipStatus
  /**
   * Change timestamp
   */
  timestamp: string
  /**
   * User who made the change
   */
  changed_by: string
  /**
   * Reason for status change
   */
  reason?: string | null
}

/**
 * Schema for switching business context.
 */
export type SwitchBusinessContextRequest = {
  /**
   * Business ID to switch to
   */
  business_id: string
}

/**
 * Team availability summary.
 */
export type TeamAvailabilitySummary = {
  /**
   * Business ID
   */
  business_id: string
  /**
   * Period start date
   */
  start_date: string
  /**
   * Period end date
   */
  end_date: string
  /**
   * Total team members
   */
  total_team_members?: number
  /**
   * Available members
   */
  available_members?: number
  /**
   * Members on time off
   */
  members_on_time_off?: number
  /**
   * Members with limited availability
   */
  members_with_limited_availability?: number
  /**
   * Daily breakdown
   */
  daily_availability?: Array<{
    [key: string]: unknown
  }>
  /**
   * Individual summaries
   */
  member_summaries?: Array<UserAvailability>
  /**
   * Peak hours
   */
  peak_availability_hours?: Array<{
    [key: string]: unknown
  }>
  /**
   * Coverage gaps
   */
  coverage_gaps?: Array<{
    [key: string]: unknown
  }>
}

/**
 * Schema for timeline entry response.
 */
export type TimelineEntryResponse = {
  /**
   * Entry ID
   */
  id: string
  /**
   * Entry type
   */
  type: string
  /**
   * Entry title
   */
  title: string
  /**
   * Entry description
   */
  description: string
  /**
   * Entry timestamp
   */
  timestamp: string
  /**
   * Entry status
   */
  status: string
  /**
   * Entry priority
   */
  priority: string
  /**
   * Creator user ID
   */
  created_by: string
  /**
   * Assigned user ID
   */
  assigned_to?: string | null
  /**
   * Additional metadata
   */
  metadata?: {
    [key: string]: unknown
  }
  /**
   * Entry tags
   */
  tags?: Array<string>
  /**
   * Whether entry is overdue
   */
  is_overdue: boolean
  /**
   * Human-readable type
   */
  type_display: string
  /**
   * Human-readable status
   */
  status_display: string
  /**
   * Human-readable priority
   */
  priority_display: string
}

/**
 * Schema for timeline requests.
 */
export type TimelineRequest = {
  /**
   * Contact ID for timeline
   */
  contact_id: string
  /**
   * Timeline start date
   */
  start_date?: string | null
  /**
   * Timeline end date
   */
  end_date?: string | null
  /**
   * Filter by activity types
   */
  activity_types?: Array<ActivityTypeSchema> | null
  /**
   * Include system-generated events
   */
  include_system_events?: boolean
}

/**
 * Schema for timeline response.
 */
export type TimelineResponse = {
  /**
   * Contact ID
   */
  contact_id: string
  /**
   * Timeline entries
   */
  timeline_entries: Array<TimelineEntryResponse>
  /**
   * Total number of entries
   */
  total_count: number
  /**
   * Number of entries skipped
   */
  skip: number
  /**
   * Maximum number of entries returned
   */
  limit: number
  /**
   * Timeline start date
   */
  start_date?: string | null
  /**
   * Timeline end date
   */
  end_date?: string | null
  /**
   * Whether there are more entries
   */
  has_more: boolean
}

/**
 * Time off request schema.
 */
export type TimeOffRequest = {
  /**
   * Request ID
   */
  id?: string | null
  /**
   * Type of time off
   */
  time_off_type: TimeOffType
  /**
   * Start date
   */
  start_date: string
  /**
   * End date
   */
  end_date: string
  /**
   * Reason for time off
   */
  reason?: string | null
  /**
   * Additional notes
   */
  notes?: string | null
  /**
   * Request status
   */
  status?: TimeOffStatus
  /**
   * User who requested
   */
  requested_by?: string | null
  /**
   * User who approved/denied
   */
  approved_by?: string | null
  /**
   * Approval/denial date
   */
  approval_date?: string | null
  /**
   * Reason for denial
   */
  denial_reason?: string | null
  /**
   * Affects job scheduling
   */
  affects_scheduling?: boolean
  /**
   * Allow emergency contact
   */
  emergency_contact_allowed?: boolean
  /**
   * Duration in days (calculated)
   */
  duration_days?: number | null
  created_date?: string | null
  last_modified?: string | null
}

/**
 * Time off response.
 */
export type TimeOffResponse = {
  /**
   * Response message
   */
  message: string
  /**
   * Time off request
   */
  time_off_request?: TimeOffRequest | null
}

export type TimeOffStatus = "pending" | "approved" | "denied" | "cancelled"

export type TimeOffType =
  | "vacation"
  | "sick_leave"
  | "personal"
  | "holiday"
  | "training"
  | "emergency"
  | "unpaid"

/**
 * Individual time slot option.
 */
export type TimeSlot = {
  /**
   * Unique slot identifier
   */
  slot_id: string
  /**
   * Slot start time
   */
  start_time: string
  /**
   * Slot end time
   */
  end_time: string
  /**
   * Available technicians for this slot
   */
  available_technicians: Array<{
    [key: string]: unknown
  }>
  /**
   * Confidence in slot availability
   */
  confidence_score: number
  /**
   * Estimated travel time to location
   */
  estimated_travel_time_minutes: number
  /**
   * Pricing information for this slot
   */
  pricing_info?: {
    [key: string]: unknown
  } | null
  /**
   * Weather conditions impact
   */
  weather_impact?: {
    [key: string]: unknown
  } | null
  /**
   * Overall slot quality score
   */
  slot_quality_score: number
  /**
   * Additional notes about this slot
   */
  notes?: string | null
}

/**
 * Request to book a specific time slot.
 */
export type TimeSlotBookingRequest = {
  /**
   * Selected time slot ID
   */
  slot_id: string
  /**
   * Customer contact information
   */
  customer_contact: {
    [key: string]: unknown
  }
  /**
   * Detailed job information
   */
  job_details: {
    [key: string]: unknown
  }
  /**
   * Special instructions for technician
   */
  special_instructions?: string | null
  /**
   * Confirm the booking
   */
  confirm_booking?: boolean
}

/**
 * Response for time slot booking.
 */
export type TimeSlotBookingResponse = {
  /**
   * Unique booking identifier
   */
  booking_id: string
  /**
   * Created job ID
   */
  job_id: string
  /**
   * Booking status
   */
  status: string
  /**
   * Confirmed time slot details
   */
  scheduled_slot: TimeSlot
  /**
   * Assigned technician information
   */
  assigned_technician: {
    [key: string]: unknown
  }
  /**
   * Booking confirmation details
   */
  confirmation_details: {
    [key: string]: unknown
  }
  /**
   * Next steps for customer
   */
  next_steps: Array<string>
  /**
   * Cancellation policy information
   */
  cancellation_policy: string
}

/**
 * Time window specification.
 */
export type TimeWindow = {
  /**
   * Window start time
   */
  start_time: string
  /**
   * Window end time
   */
  end_time: string
}

/**
 * Trend analysis data.
 */
export type TrendAnalysis = {
  /**
   * Metric name
   */
  metric_name: string
  /**
   * Trend direction
   */
  trend_direction: string
  /**
   * Change percentage
   */
  change_percent: string
  /**
   * Time period in days
   */
  time_period_days: number
  /**
   * Significance level
   */
  significance_level: string
}

/**
 * User availability information.
 */
export type UserAvailability = {
  /**
   * User ID
   */
  user_id: string
  /**
   * Date
   */
  availability_date: string
  /**
   * Available time slots
   */
  available_slots?: Array<{
    [key: string]: string
  }>
  /**
   * Total available hours
   */
  total_available_hours?: number
  /**
   * Working hours for the day
   */
  working_hours?: {
    [key: string]: string
  } | null
  /**
   * Time off on this date
   */
  time_off?: Array<TimeOffRequest>
  /**
   * Calendar events
   */
  calendar_events?: Array<CalendarEvent>
  /**
   * Overall availability
   */
  is_available?: boolean
  /**
   * Reason if unavailable
   */
  unavailable_reason?: string | null
}

/**
 * Response schema for user's business summary.
 */
export type UserBusinessSummaryResponse = {
  business: BusinessSummaryResponse
  membership: BusinessMembershipResponse
  is_owner: boolean
  pending_invitations_count: number | null
}

/**
 * User detail inclusion levels.
 */
export type UserDetailLevel = "none" | "basic" | "full"

export type UserProfileResponse = {
  id: string
  email?: string | null
  phone?: string | null
  full_name?: string | null
  is_active: boolean
  is_superuser: boolean
  supabase_id: string
  created_at: string | null
  updated_at: string | null
  business_memberships?: Array<BusinessMembershipSummary>
  has_businesses: boolean
  needs_onboarding: boolean
}

/**
 * Basic user reference information.
 */
export type UserReferenceBasic = {
  /**
   * User ID
   */
  id: string
  /**
   * User display name
   */
  display_name: string
  /**
   * User email
   */
  email?: string | null
}

/**
 * Full user reference information.
 */
export type UserReferenceFull = {
  /**
   * User ID
   */
  id: string
  /**
   * User display name
   */
  display_name: string
  /**
   * User email
   */
  email?: string | null
  /**
   * Full name
   */
  full_name?: string | null
  /**
   * Phone number
   */
  phone?: string | null
  /**
   * Business role
   */
  role?: string | null
  /**
   * Department
   */
  department?: string | null
  /**
   * Active status
   */
  is_active?: boolean
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

/**
 * Working hours response.
 */
export type WorkingHoursResponse = {
  /**
   * Response message
   */
  message: string
  /**
   * Working hours template
   */
  template?: WorkingHoursTemplate | null
}

/**
 * Working hours template schema.
 */
export type WorkingHoursTemplate = {
  /**
   * Template ID
   */
  id?: string | null
  /**
   * Template name
   */
  name: string
  /**
   * Template description
   */
  description?: string | null
  /**
   * Monday start time
   */
  monday_start?: string | null
  /**
   * Monday end time
   */
  monday_end?: string | null
  /**
   * Tuesday start time
   */
  tuesday_start?: string | null
  /**
   * Tuesday end time
   */
  tuesday_end?: string | null
  /**
   * Wednesday start time
   */
  wednesday_start?: string | null
  /**
   * Wednesday end time
   */
  wednesday_end?: string | null
  /**
   * Thursday start time
   */
  thursday_start?: string | null
  /**
   * Thursday end time
   */
  thursday_end?: string | null
  /**
   * Friday start time
   */
  friday_start?: string | null
  /**
   * Friday end time
   */
  friday_end?: string | null
  /**
   * Saturday start time
   */
  saturday_start?: string | null
  /**
   * Saturday end time
   */
  saturday_end?: string | null
  /**
   * Sunday start time
   */
  sunday_start?: string | null
  /**
   * Sunday end time
   */
  sunday_end?: string | null
  /**
   * Break duration in minutes
   */
  break_duration_minutes?: number
  /**
   * Lunch start time
   */
  lunch_start_time?: string | null
  /**
   * Lunch duration in minutes
   */
  lunch_duration_minutes?: number
  /**
   * Allow flexible start time
   */
  allows_flexible_start?: boolean
  /**
   * Flexible start window
   */
  flexible_start_window_minutes?: number
  /**
   * Allow overtime
   */
  allows_overtime?: boolean
  /**
   * Max overtime hours per day
   */
  max_overtime_hours_per_day?: number
  /**
   * Total weekly hours (calculated)
   */
  total_weekly_hours?: number | null
}

export type ActivitiesCreateActivityData = {
  requestBody: ActivityCreateRequest
}

export type ActivitiesCreateActivityResponse = ActivityResponse

export type ActivitiesGetActivityData = {
  /**
   * Activity ID
   */
  activityId: string
}

export type ActivitiesGetActivityResponse = ActivityResponse

export type ActivitiesUpdateActivityData = {
  /**
   * Activity ID
   */
  activityId: string
  requestBody: ActivityUpdateRequest
}

export type ActivitiesUpdateActivityResponse = ActivityResponse

export type ActivitiesDeleteActivityData = {
  /**
   * Activity ID
   */
  activityId: string
}

export type ActivitiesDeleteActivityResponse =
  app__api__schemas__activity_schemas__MessageResponse

export type ActivitiesSearchActivitiesData = {
  limit?: number
  requestBody: ActivitySearchRequest
  skip?: number
}

export type ActivitiesSearchActivitiesResponse = ActivityListResponse

export type ActivitiesGetUserActivitiesData = {
  /**
   * Filter activities before this date
   */
  endDate?: string | null
  limit?: number
  skip?: number
  /**
   * Filter activities after this date
   */
  startDate?: string | null
  /**
   * Filter by activity statuses
   */
  statuses?: Array<string> | null
}

export type ActivitiesGetUserActivitiesResponse = ActivityListResponse

export type ActivitiesGetOverdueActivitiesData = {
  /**
   * Filter by assigned user
   */
  assignedTo?: string | null
}

export type ActivitiesGetOverdueActivitiesResponse = Array<ActivityResponse>

export type ActivitiesGetUpcomingActivitiesData = {
  /**
   * Filter by assigned user
   */
  assignedTo?: string | null
  /**
   * Number of days to look ahead
   */
  daysAhead?: number
}

export type ActivitiesGetUpcomingActivitiesResponse = Array<ActivityResponse>

export type ActivitiesGetContactTimelineData = {
  limit?: number
  requestBody: TimelineRequest
  skip?: number
}

export type ActivitiesGetContactTimelineResponse = TimelineResponse

export type ActivitiesBulkUpdateActivitiesData = {
  requestBody: ActivityBulkUpdateRequest
}

export type ActivitiesBulkUpdateActivitiesResponse = BulkOperationResponse

export type ActivitiesCreateActivityTemplateData = {
  requestBody: ActivityTemplateCreateRequest
}

export type ActivitiesCreateActivityTemplateResponse = ActivityTemplateResponse

export type ActivitiesGetActivityTemplatesData = {
  /**
   * Filter by activity type
   */
  activityType?: string | null
}

export type ActivitiesGetActivityTemplatesResponse =
  Array<ActivityTemplateResponse>

export type ActivitiesGetActivityStatisticsData = {
  /**
   * Statistics end date
   */
  endDate?: string | null
  /**
   * Statistics start date
   */
  startDate?: string | null
  /**
   * Filter statistics for specific user
   */
  userFilter?: string | null
}

export type ActivitiesGetActivityStatisticsResponse = ActivityStatisticsResponse

export type ActivitiesGetContactActivitySummaryData = {
  /**
   * Contact ID
   */
  contactId: string
}

export type ActivitiesGetContactActivitySummaryResponse =
  ContactActivitySummaryResponse

export type ActivitiesGetPendingRemindersResponse =
  Array<ActivityReminderResponse>

export type ActivitiesMarkReminderSentData = {
  /**
   * Activity ID
   */
  activityId: string
  /**
   * Reminder ID
   */
  reminderId: string
}

export type ActivitiesMarkReminderSentResponse =
  app__api__schemas__activity_schemas__MessageResponse

export type ActivitiesGetDashboardActivitiesResponse =
  DashboardActivitiesResponse

export type AuthSignUpData = {
  requestBody: SignUpRequest
}

export type AuthSignUpResponse = Message

export type AuthSignUpWithPhoneData = {
  requestBody: PhoneSignUpRequest
}

export type AuthSignUpWithPhoneResponse = Message

export type AuthSignInData = {
  requestBody: SignInRequest
}

export type AuthSignInResponse = {
  [key: string]: unknown
}

export type AuthSignInWithPhoneData = {
  requestBody: PhoneSignInRequest
}

export type AuthSignInWithPhoneResponse = {
  [key: string]: unknown
}

export type AuthSendOtpData = {
  requestBody: SendOTPRequest
}

export type AuthSendOtpResponse = Message

export type AuthVerifyOtpData = {
  requestBody: OTPVerificationRequest
}

export type AuthVerifyOtpResponse = {
  [key: string]: unknown
}

export type AuthOauthLoginData = {
  provider: string
}

export type AuthOauthLoginResponse = {
  [key: string]: unknown
}

export type AuthSignOutResponse = Message

export type AuthRefreshTokenData = {
  refreshToken: string
}

export type AuthRefreshTokenResponse = {
  [key: string]: unknown
}

export type AuthPasswordRecoveryData = {
  email: string
}

export type AuthPasswordRecoveryResponse = Message

export type AuthAppleSignInData = {
  requestBody: AppleSignInRequest
}

export type AuthAppleSignInResponse = OAuthSignInResponse

export type AuthGoogleSignInData = {
  requestBody: GoogleSignInRequest
}

export type AuthGoogleSignInResponse = OAuthSignInResponse

export type AuthRevokeUserTokensData = {
  userId: string
}

export type AuthRevokeUserTokensResponse = {
  [key: string]: unknown
}

export type BusinessContextGetCurrentBusinessContextResponse =
  BusinessContextInfoResponse

export type BusinessContextSwitchBusinessContextData = {
  requestBody: SwitchBusinessContextRequest
}

export type BusinessContextSwitchBusinessContextResponse =
  BusinessContextResponse

export type BusinessContextGetAvailableBusinessesResponse = Array<{
  [key: string]: unknown
}>

export type BusinessContextRefreshBusinessContextTokenResponse = {
  [key: string]: unknown
}

export type BusinessesDebugEndpointResponse = unknown

export type BusinessesCreateBusinessData = {
  requestBody: BusinessCreateRequest
}

export type BusinessesCreateBusinessResponse = BusinessResponse

export type BusinessesGetMyBusinessesData = {
  /**
   * Maximum number of businesses to return
   */
  limit?: number
  /**
   * Number of businesses to skip
   */
  skip?: number
}

export type BusinessesGetMyBusinessesResponse =
  Array<UserBusinessSummaryResponse>

export type BusinessesInviteTeamMemberData = {
  businessId: string
  requestBody: BusinessInvitationCreateRequest
}

export type BusinessesInviteTeamMemberResponse = BusinessInvitationResponse

export type BusinessesAcceptInvitationData = {
  requestBody: BusinessInvitationAcceptRequest
}

export type BusinessesAcceptInvitationResponse = BusinessMembershipResponse

export type BusinessesGetBusinessDetailData = {
  businessId: string
}

export type BusinessesGetBusinessDetailResponse = BusinessDetailResponse

export type BusinessesUpdateBusinessData = {
  businessId: string
  requestBody: BusinessUpdateRequest
}

export type BusinessesUpdateBusinessResponse = BusinessResponse

export type BusinessesGetBusinessMembersData = {
  businessId: string
  /**
   * Maximum number of members to return
   */
  limit?: number
  /**
   * Number of members to skip
   */
  skip?: number
}

export type BusinessesGetBusinessMembersResponse =
  Array<BusinessMembershipResponse>

export type BusinessesUpdateMemberRoleData = {
  businessId: string
  membershipId: string
  requestBody: BusinessMembershipUpdateRequest
}

export type BusinessesUpdateMemberRoleResponse = BusinessMembershipResponse

export type BusinessesRemoveTeamMemberData = {
  businessId: string
  membershipId: string
}

export type BusinessesRemoveTeamMemberResponse = Message

export type BusinessesGetBusinessInvitationsData = {
  businessId: string
  /**
   * Maximum number of invitations to return
   */
  limit?: number
  /**
   * Number of invitations to skip
   */
  skip?: number
}

export type BusinessesGetBusinessInvitationsResponse =
  Array<BusinessInvitationResponse>

export type BusinessesCancelInvitationData = {
  invitationId: string
}

export type BusinessesCancelInvitationResponse = Message

export type BusinessesDeclineInvitationData = {
  invitationId: string
}

export type BusinessesDeclineInvitationResponse = Message

export type CreateContactNoSlashData = {
  requestBody: ContactCreateRequest
}

export type CreateContactNoSlashResponse = ContactResponse

export type ListContactsNoSlashData = {
  /**
   * Level of user detail to include
   */
  includeUserDetails?: UserDetailLevel
  /**
   * Maximum number of records to return
   */
  limit?: number
  /**
   * Number of records to skip
   */
  skip?: number
}

export type ListContactsNoSlashResponse = ContactListResponse

export type ContactsCreateContactData = {
  requestBody: ContactCreateRequest
}

export type ContactsCreateContactResponse = ContactResponse

export type ContactsListContactsData = {
  /**
   * Level of user detail to include
   */
  includeUserDetails?: UserDetailLevel
  /**
   * Maximum number of records to return
   */
  limit?: number
  /**
   * Number of records to skip
   */
  skip?: number
}

export type ContactsListContactsResponse = ContactListResponse

export type ContactsGetContactData = {
  /**
   * Contact ID
   */
  contactId: string
  /**
   * Level of user detail to include
   */
  includeUserDetails?: UserDetailLevel
}

export type ContactsGetContactResponse = ContactResponse

export type ContactsUpdateContactData = {
  /**
   * Contact ID
   */
  contactId: string
  requestBody: ContactUpdateRequest
}

export type ContactsUpdateContactResponse = ContactResponse

export type ContactsDeleteContactData = {
  /**
   * Contact ID
   */
  contactId: string
}

export type ContactsDeleteContactResponse =
  app__api__schemas__contact_schemas__MessageResponse

export type ContactsSearchContactsData = {
  requestBody: ContactSearchRequest
}

export type ContactsSearchContactsResponse = ContactListResponse

export type ContactsBulkUpdateContactsData = {
  requestBody: ContactBulkUpdateRequest
}

export type ContactsBulkUpdateContactsResponse = ContactBulkOperationResponse

export type ContactsConvertContactTypeData = {
  /**
   * Contact ID
   */
  contactId: string
  requestBody: ContactConversionRequest
}

export type ContactsConvertContactTypeResponse = ContactResponse

export type ContactsAssignContactsData = {
  requestBody: ContactAssignmentRequest
}

export type ContactsAssignContactsResponse = ContactBulkOperationResponse

export type ContactsManageContactTagsData = {
  requestBody: ContactTagOperationRequest
}

export type ContactsManageContactTagsResponse = ContactBulkOperationResponse

export type ContactsMarkContactContactedData = {
  /**
   * Contact ID
   */
  contactId: string
}

export type ContactsMarkContactContactedResponse = ContactResponse

export type ContactsGetContactStatisticsResponse = ContactStatisticsResponse

export type ContactsAddContactInteractionData = {
  /**
   * Contact ID
   */
  contactId: string
  requestBody: ContactInteractionCreateRequest
}

export type ContactsAddContactInteractionResponse = ContactInteractionResponse

export type ContactsGetContactInteractionsData = {
  /**
   * Contact ID
   */
  contactId: string
  /**
   * Maximum number of records to return
   */
  limit?: number
  /**
   * Number of records to skip
   */
  skip?: number
}

export type ContactsGetContactInteractionsResponse =
  ContactInteractionListResponse

export type ContactsUpdateContactStatusData = {
  /**
   * Contact ID
   */
  contactId: string
  requestBody: ContactStatusUpdateRequest
}

export type ContactsUpdateContactStatusResponse = ContactStatusUpdateResponse

export type HealthHealthCheckResponse = unknown

export type IntelligentSchedulingOptimizeScheduleData = {
  requestBody: SchedulingOptimizationRequest
}

export type IntelligentSchedulingOptimizeScheduleResponse =
  SchedulingOptimizationResponse

export type IntelligentSchedulingAdaptScheduleRealtimeData = {
  requestBody: RealTimeAdaptationRequest
}

export type IntelligentSchedulingAdaptScheduleRealtimeResponse =
  RealTimeAdaptationResponse

export type IntelligentSchedulingGetSchedulingAnalyticsData = {
  /**
   * Analytics period end date
   */
  endDate: string
  /**
   * Include predictive insights
   */
  includePredictions?: boolean
  /**
   * Include improvement recommendations
   */
  includeRecommendations?: boolean
  /**
   * Filter by job type
   */
  jobType?: string | null
  /**
   * Analytics period start date
   */
  startDate: string
  /**
   * Filter by specific user
   */
  userId?: string | null
}

export type IntelligentSchedulingGetSchedulingAnalyticsResponse =
  SchedulingAnalyticsResponse

export type IntelligentSchedulingGetSchedulingPredictionsData = {
  /**
   * Number of days to forecast
   */
  forecastDays?: number
  /**
   * Filter by job types
   */
  jobTypes?: Array<string> | null
}

export type IntelligentSchedulingGetSchedulingPredictionsResponse = {
  [key: string]: unknown
}

export type IntelligentSchedulingGetRealtimeScheduleStatusResponse =
  RealTimeScheduleStatusResponse

export type IntelligentSchedulingUpdateUserLocationData = {
  requestBody: LocationUpdateRequest
}

export type IntelligentSchedulingUpdateUserLocationResponse = void

export type IntelligentSchedulingGetOptimizationHistoryData = {
  /**
   * Number of days of history
   */
  days?: number
  /**
   * Maximum number of results
   */
  limit?: number
}

export type IntelligentSchedulingGetOptimizationHistoryResponse = Array<{
  [key: string]: unknown
}>

export type IntelligentSchedulingCancelOptimizationData = {
  optimizationId: string
}

export type IntelligentSchedulingCancelOptimizationResponse = void

export type IntelligentSchedulingGetAvailableTimeSlotsData = {
  requestBody: AvailableTimeSlotRequest
}

export type IntelligentSchedulingGetAvailableTimeSlotsResponse =
  AvailableTimeSlotsResponse

export type IntelligentSchedulingBookTimeSlotData = {
  requestBody: TimeSlotBookingRequest
}

export type IntelligentSchedulingBookTimeSlotResponse = TimeSlotBookingResponse

export type IntelligentSchedulingCheckSlotAvailabilityData = {
  slotId: string
}

export type IntelligentSchedulingCheckSlotAvailabilityResponse = {
  [key: string]: unknown
}

export type IntelligentSchedulingBulkCheckSlotAvailabilityData = {
  requestBody: Array<string>
}

export type IntelligentSchedulingBulkCheckSlotAvailabilityResponse = Array<{
  [key: string]: unknown
}>

export type IntelligentSchedulingGetWorkingHoursTemplatesResponse =
  Array<WorkingHoursTemplate>

export type IntelligentSchedulingCreateWorkingHoursTemplateData = {
  requestBody: CreateWorkingHoursTemplateRequest
}

export type IntelligentSchedulingCreateWorkingHoursTemplateResponse =
  WorkingHoursResponse

export type IntelligentSchedulingSetUserWorkingHoursData = {
  requestBody: SetUserWorkingHoursRequest
  userId: string
}

export type IntelligentSchedulingSetUserWorkingHoursResponse =
  WorkingHoursResponse

export type IntelligentSchedulingCreateCalendarEventData = {
  requestBody: CreateCalendarEventRequest
  userId: string
}

export type IntelligentSchedulingCreateCalendarEventResponse =
  CalendarEventResponse

export type IntelligentSchedulingGetCalendarEventsData = {
  /**
   * End date
   */
  endDate: string
  /**
   * Start date
   */
  startDate: string
  userId: string
}

export type IntelligentSchedulingGetCalendarEventsResponse =
  Array<CalendarEvent>

export type IntelligentSchedulingDeleteCalendarEventData = {
  eventId: string
}

export type IntelligentSchedulingDeleteCalendarEventResponse = unknown

export type IntelligentSchedulingCreateTimeOffRequestData = {
  requestBody: CreateTimeOffRequest
  userId: string
}

export type IntelligentSchedulingCreateTimeOffRequestResponse = TimeOffResponse

export type IntelligentSchedulingApproveTimeOffRequestData = {
  requestBody: ApproveTimeOffRequest
  timeOffId: string
}

export type IntelligentSchedulingApproveTimeOffRequestResponse = TimeOffResponse

export type IntelligentSchedulingGetTimeOffRequestsData = {
  /**
   * Filter by status
   */
  status?: string | null
  /**
   * Filter by user ID
   */
  userId?: string | null
}

export type IntelligentSchedulingGetTimeOffRequestsResponse =
  Array<TimeOffRequest>

export type IntelligentSchedulingCheckUserAvailabilityData = {
  requestBody: AvailabilityCheckRequest
}

export type IntelligentSchedulingCheckUserAvailabilityResponse =
  AvailabilityCheckResponse

export type IntelligentSchedulingGetTeamAvailabilitySummaryData = {
  /**
   * End date
   */
  endDate: string
  /**
   * Start date
   */
  startDate: string
}

export type IntelligentSchedulingGetTeamAvailabilitySummaryResponse =
  TeamAvailabilitySummary

export type IntelligentSchedulingUpdateCalendarPreferencesData = {
  requestBody: CalendarPreferences
  userId: string
}

export type IntelligentSchedulingUpdateCalendarPreferencesResponse =
  CalendarPreferencesResponse

export type IntelligentSchedulingGetCalendarPreferencesData = {
  userId: string
}

export type IntelligentSchedulingGetCalendarPreferencesResponse =
  CalendarPreferences

export type CreateJobNoSlashData = {
  requestBody: JobCreateRequest
}

export type CreateJobNoSlashResponse = JobResponse

export type CreateJobNoSlash1Data = {
  requestBody: JobCreateRequest
}

export type CreateJobNoSlash1Response = JobResponse

export type ListJobsNoSlashData = {
  /**
   * Number of jobs to return
   */
  limit?: number
  /**
   * Number of jobs to skip
   */
  skip?: number
}

export type ListJobsNoSlashResponse = JobListPaginatedResponse

export type ListJobsNoSlash1Data = {
  /**
   * Number of jobs to return
   */
  limit?: number
  /**
   * Number of jobs to skip
   */
  skip?: number
}

export type ListJobsNoSlash1Response = JobListPaginatedResponse

export type JobsCreateJobData = {
  requestBody: JobCreateRequest
}

export type JobsCreateJobResponse = JobResponse

export type JobsCreateJob1Data = {
  requestBody: JobCreateRequest
}

export type JobsCreateJob1Response = JobResponse

export type JobsListJobsData = {
  /**
   * Number of jobs to return
   */
  limit?: number
  /**
   * Number of jobs to skip
   */
  skip?: number
}

export type JobsListJobsResponse = JobListPaginatedResponse

export type JobsListJobs1Data = {
  /**
   * Number of jobs to return
   */
  limit?: number
  /**
   * Number of jobs to skip
   */
  skip?: number
}

export type JobsListJobs1Response = JobListPaginatedResponse

export type JobsGetJobData = {
  jobId: string
}

export type JobsGetJobResponse = JobResponse

export type JobsGetJob1Data = {
  jobId: string
}

export type JobsGetJob1Response = JobResponse

export type JobsUpdateJobData = {
  jobId: string
  requestBody: JobUpdateRequest
}

export type JobsUpdateJobResponse = JobResponse

export type JobsUpdateJob1Data = {
  jobId: string
  requestBody: JobUpdateRequest
}

export type JobsUpdateJob1Response = JobResponse

export type JobsDeleteJobData = {
  jobId: string
}

export type JobsDeleteJobResponse = JobActionResponse

export type JobsDeleteJob1Data = {
  jobId: string
}

export type JobsDeleteJob1Response = JobActionResponse

export type JobsSearchJobsData = {
  requestBody: JobSearchRequest
}

export type JobsSearchJobsResponse = JobListPaginatedResponse

export type JobsSearchJobs1Data = {
  requestBody: JobSearchRequest
}

export type JobsSearchJobs1Response = JobListPaginatedResponse

export type JobsUpdateJobStatusData = {
  jobId: string
  requestBody: JobStatusUpdateRequest
}

export type JobsUpdateJobStatusResponse = JobResponse

export type JobsUpdateJobStatus1Data = {
  jobId: string
  requestBody: JobStatusUpdateRequest
}

export type JobsUpdateJobStatus1Response = JobResponse

export type JobsAssignJobData = {
  jobId: string
  requestBody: JobAssignmentRequest
}

export type JobsAssignJobResponse = JobResponse

export type JobsAssignJob1Data = {
  jobId: string
  requestBody: JobAssignmentRequest
}

export type JobsAssignJob1Response = JobResponse

export type JobsBulkUpdateJobsData = {
  requestBody: JobBulkUpdateRequest
}

export type JobsBulkUpdateJobsResponse = JobBulkActionResponse

export type JobsBulkUpdateJobs1Data = {
  requestBody: JobBulkUpdateRequest
}

export type JobsBulkUpdateJobs1Response = JobBulkActionResponse

export type JobsGetJobStatisticsResponse = JobStatisticsResponse

export type JobsGetJobStatistics1Response = JobStatisticsResponse

export type JobsGetUserWorkloadData = {
  targetUserId: string
}

export type JobsGetUserWorkloadResponse = JobWorkloadResponse

export type JobsGetUserWorkload1Data = {
  targetUserId: string
}

export type JobsGetUserWorkload1Response = JobWorkloadResponse

export type JobsGetDailyScheduleData = {
  /**
   * Date to get schedule for
   */
  date: string
  /**
   * Filter by specific user
   */
  userId?: string | null
}

export type JobsGetDailyScheduleResponse = JobScheduleResponse

export type JobsGetDailySchedule1Data = {
  /**
   * Date to get schedule for
   */
  date: string
  /**
   * Filter by specific user
   */
  userId?: string | null
}

export type JobsGetDailySchedule1Response = JobScheduleResponse

export type JobsStartJobData = {
  jobId: string
}

export type JobsStartJobResponse = JobResponse

export type JobsStartJob1Data = {
  jobId: string
}

export type JobsStartJob1Response = JobResponse

export type JobsCompleteJobData = {
  /**
   * Notes about job completion
   */
  completionNotes?: string | null
  jobId: string
}

export type JobsCompleteJobResponse = JobResponse

export type JobsCompleteJob1Data = {
  /**
   * Notes about job completion
   */
  completionNotes?: string | null
  jobId: string
}

export type JobsCompleteJob1Response = JobResponse

export type JobsCancelJobData = {
  jobId: string
  /**
   * Reason for cancellation
   */
  reason: string
}

export type JobsCancelJobResponse = JobResponse

export type JobsCancelJob1Data = {
  jobId: string
  /**
   * Reason for cancellation
   */
  reason: string
}

export type JobsCancelJob1Response = JobResponse

export type MiddlewareHealthGetMiddlewareHealthResponse =
  MiddlewareHealthResponse

export type MiddlewareHealthTestMiddlewareStackResponse = MiddlewareTestResponse

export type MiddlewareHealthGetMiddlewareConfigResponse = {
  [key: string]: unknown
}

export type MiddlewareHealthTestAuthenticationRequiredResponse = {
  [key: string]: unknown
}

export type MiddlewareHealthTestBusinessContextRequiredResponse = {
  [key: string]: unknown
}

export type UsersGetCurrentUserProfileResponse = UserProfileResponse

export type UsersUpdateUserBusinessContextData = {
  requestBody: BusinessContextRequest
}

export type UsersUpdateUserBusinessContextResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message
