{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/seo/pages/[businessId]",
      "regex": "^/api/seo/pages/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPbusinessId": "nxtPbusinessId"
      },
      "namedRegex": "^/api/seo/pages/(?<nxtPbusinessId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/commercial/[activitySlug]/[locationSlug]",
      "regex": "^/commercial/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPactivitySlug": "nxtPactivitySlug",
        "nxtPlocationSlug": "nxtPlocationSlug"
      },
      "namedRegex": "^/commercial/(?<nxtPactivitySlug>[^/]+?)/(?<nxtPlocationSlug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/emergency/[activitySlug]/[locationSlug]",
      "regex": "^/emergency/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPactivitySlug": "nxtPactivitySlug",
        "nxtPlocationSlug": "nxtPlocationSlug"
      },
      "namedRegex": "^/emergency/(?<nxtPactivitySlug>[^/]+?)/(?<nxtPlocationSlug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/products/[slug]",
      "regex": "^/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/products/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/projects/[slug]",
      "regex": "^/projects/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/projects/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/services/[activitySlug]",
      "regex": "^/services/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPactivitySlug": "nxtPactivitySlug"
      },
      "namedRegex": "^/services/(?<nxtPactivitySlug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/services/[activitySlug]/[locationSlug]",
      "regex": "^/services/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPactivitySlug": "nxtPactivitySlug",
        "nxtPlocationSlug": "nxtPlocationSlug"
      },
      "namedRegex": "^/services/(?<nxtPactivitySlug>[^/]+?)/(?<nxtPlocationSlug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[...slug]",
      "regex": "^/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/(?<nxtPslug>.+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/booking",
      "regex": "^/booking(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/booking(?:/)?$"
    },
    {
      "page": "/cart",
      "regex": "^/cart(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cart(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/checkout/success",
      "regex": "^/checkout/success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout/success(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/locations",
      "regex": "^/locations(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/locations(?:/)?$"
    },
    {
      "page": "/pricing",
      "regex": "^/pricing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/pricing(?:/)?$"
    },
    {
      "page": "/products",
      "regex": "^/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/products(?:/)?$"
    },
    {
      "page": "/projects",
      "regex": "^/projects(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/projects(?:/)?$"
    },
    {
      "page": "/robots.txt",
      "regex": "^/robots\\.txt(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/robots\\.txt(?:/)?$"
    },
    {
      "page": "/services",
      "regex": "^/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services(?:/)?$"
    },
    {
      "page": "/sitemap.xml",
      "regex": "^/sitemap\\.xml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sitemap\\.xml(?:/)?$"
    },
    {
      "page": "/widget",
      "regex": "^/widget(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/widget(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}